randomtestcard2
Testing Feast Card
choice1: 206, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 0
choice1: 165, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1
choice1: 456, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 2
choice1: 479, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 3
choice1: 474, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 4
choice1: 426, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 5
choice1: 358, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 6
choice1: 234, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 7
choice1: 397, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 8
choice1: 263, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 9
choice1: 192, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 10
choice1: 64, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 11
choice1: 111, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 12
choice1: 308, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 13
choice1: 290, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 14
choice1: 161, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 15
choice1: 17, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 16
choice1: 393, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 17
choice1: 25, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 18
choice1: 145, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 19
choice1: 454, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 20
choice1: 123, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 21
choice1: 29, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 22
choice1: 87, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 23
choice1: 264, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 24
choice1: 453, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 25
choice1: 157, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 26
choice1: 261, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 27
choice1: 449, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 28
choice1: 341, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 29
choice1: 73, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 30
choice1: 426, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 31
choice1: 228, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 32
choice1: 484, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 33
choice1: 414, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 34
choice1: 434, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 35
choice1: 207, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 36
choice1: 495, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 37
choice1: 375, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 38
choice1: 38, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 39
choice1: 400, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 40
choice1: 423, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 41
choice1: 89, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 42
choice1: 483, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 43
choice1: 489, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 44
choice1: 71, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 45
choice1: 238, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 46
choice1: 111, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 47
choice1: 257, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 48
choice1: 5, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 49
choice1: 468, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 50
choice1: 151, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 51
choice1: 327, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 52
choice1: 182, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 53
choice1: 436, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 54
choice1: 299, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 55
choice1: 57, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 56
choice1: 238, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 57
choice1: 416, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 58
choice1: 377, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 59
choice1: 47, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 60
choice1: 0, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 61
choice1: 185, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 62
choice1: 144, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 63
choice1: 303, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 64
choice1: 166, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 65
choice1: 304, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 66
choice1: 236, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 67
choice1: 258, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 68
choice1: 424, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 69
choice1: 254, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 70
choice1: 489, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 71
choice1: 388, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 72
choice1: 58, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 73
choice1: 352, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 74
choice1: 135, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 75
choice1: 90, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 76
choice1: 454, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 77
choice1: 276, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 78
choice1: 57, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 79
choice1: 6, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 80
choice1: 252, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 81
choice1: 28, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 82
choice1: 124, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 83
choice1: 428, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 84
choice1: 41, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 85
choice1: 411, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 86
choice1: 474, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 87
choice1: 268, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 88
choice1: 468, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 89
choice1: 389, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 90
choice1: 2, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 91
choice1: 113, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 92
choice1: 18, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 93
choice1: 280, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 94
choice1: 346, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 95
choice1: 230, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 96
choice1: 154, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 97
choice1: 150, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 98
choice1: 423, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 99
choice1: 28, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 100
choice1: 88, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 101
choice1: 175, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 102
choice1: 104, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 103
choice1: 108, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 104
choice1: 236, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 105
choice1: 291, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 106
choice1: 213, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 107
choice1: 109, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 108
choice1: 168, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 109
choice1: 477, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 110
choice1: 345, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 111
choice1: 412, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 112
choice1: 64, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 113
choice1: 319, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 114
choice1: 37, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 115
choice1: 426, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 116
choice1: 132, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 117
choice1: 383, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 118
choice1: 426, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 119
choice1: 204, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 120
choice1: 38, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 121
choice1: 143, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 122
choice1: 403, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 123
choice1: 318, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 124
choice1: 84, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 125
choice1: 4, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 126
choice1: 237, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 127
choice1: 376, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 128
choice1: 225, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 129
choice1: 390, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 130
choice1: 297, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 131
choice1: 467, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 132
choice1: 232, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 133
choice1: 447, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 134
choice1: 376, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 135
choice1: 408, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 136
choice1: 205, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 137
choice1: 231, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 138
choice1: 198, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 139
choice1: 37, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 140
choice1: 342, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 141
choice1: 2, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 142
choice1: 82, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 143
choice1: 15, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 144
choice1: 320, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 145
choice1: 390, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 146
choice1: 404, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 147
choice1: 124, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 148
choice1: 459, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 149
choice1: 80, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 150
choice1: 370, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 151
choice1: 78, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 152
choice1: 365, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 153
choice1: 283, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 154
choice1: 326, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 155
choice1: 326, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 156
choice1: 250, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 157
choice1: 75, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 158
choice1: 233, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 159
choice1: 272, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 160
choice1: 295, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 161
choice1: 256, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 162
choice1: 368, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 163
choice1: 415, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 164
choice1: 397, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 165
choice1: 321, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 166
choice1: 130, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 167
choice1: 151, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 168
choice1: 212, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 169
choice1: 157, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 170
choice1: 318, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 171
choice1: 398, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 172
choice1: 181, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 173
choice1: 444, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 174
choice1: 53, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 175
choice1: 128, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 176
choice1: 497, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 177
choice1: 218, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 178
choice1: 491, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 179
choice1: 352, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 180
choice1: 431, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 181
choice1: 137, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 182
choice1: 368, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 183
choice1: 225, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 184
choice1: 453, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 185
choice1: 245, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 186
choice1: 50, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 187
choice1: 309, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 188
choice1: 352, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 189
choice1: 382, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 190
choice1: 270, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 191
choice1: 439, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 192
choice1: 214, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 193
choice1: 351, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 194
choice1: 124, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 195
choice1: 266, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 196
choice1: 499, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 197
choice1: 430, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 198
choice1: 270, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 199
choice1: 431, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 200
choice1: 32, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 201
choice1: 495, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 202
choice1: 172, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 203
choice1: 414, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 204
choice1: 254, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 205
choice1: 235, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 206
choice1: 468, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 207
choice1: 0, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 208
choice1: 434, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 209
choice1: 341, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 210
choice1: 129, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 211
choice1: 277, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 212
choice1: 12, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 213
choice1: 85, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 214
choice1: 381, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 215
choice1: 233, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 216
choice1: 478, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 217
choice1: 117, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 218
choice1: 70, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 219
choice1: 431, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 220
choice1: 487, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 221
choice1: 281, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 222
choice1: 288, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 223
choice1: 20, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 224
choice1: 232, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 225
choice1: 403, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 226
choice1: 253, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 227
choice1: 121, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 228
choice1: 327, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 229
choice1: 11, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 230
choice1: 25, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 231
choice1: 180, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 232
choice1: 280, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 233
choice1: 76, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 234
choice1: 277, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 235
choice1: 89, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 236
choice1: 308, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 237
choice1: 410, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 238
choice1: 355, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 239
choice1: 108, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 240
choice1: 107, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 241
choice1: 414, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 242
choice1: 201, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 243
choice1: 87, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 244
choice1: 339, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 245
choice1: 301, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 246
choice1: 155, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 247
choice1: 228, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 248
choice1: 89, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 249
choice1: 369, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 250
choice1: 418, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 251
choice1: 239, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 252
choice1: 3, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 253
choice1: 399, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 254
choice1: 339, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 255
choice1: 46, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 256
choice1: 74, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 257
choice1: 441, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 258
choice1: 202, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 259
choice1: 202, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 260
choice1: 5, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 261
choice1: 353, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 262
choice1: 331, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 263
choice1: 190, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 264
choice1: 225, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 265
choice1: 172, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 266
choice1: 306, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 267
choice1: 56, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 268
choice1: 15, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 269
choice1: 374, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 270
choice1: 272, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 271
choice1: 4, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 272
choice1: 378, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 273
choice1: 387, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 274
choice1: 421, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 275
choice1: 280, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 276
choice1: 491, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 277
choice1: 462, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 278
choice1: 281, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 279
choice1: 422, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 280
choice1: 465, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 281
choice1: 489, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 282
choice1: 155, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 283
choice1: 178, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 284
choice1: 394, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 285
choice1: 438, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 286
choice1: 22, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 287
choice1: 489, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 288
choice1: 383, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 289
choice1: 94, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 290
choice1: 452, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 291
choice1: 460, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 292
choice1: 295, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 293
choice1: 465, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 294
choice1: 410, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 295
choice1: 251, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 296
choice1: 98, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 297
choice1: 489, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 298
choice1: 208, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 299
choice1: 424, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 300
choice1: 41, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 301
choice1: 330, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 302
choice1: 202, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 303
choice1: 235, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 304
choice1: 353, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 305
choice1: 486, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 306
choice1: 381, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 307
choice1: 312, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 308
choice1: 115, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 309
choice1: 38, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 310
choice1: 318, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 311
choice1: 134, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 312
choice1: 64, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 313
choice1: 374, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 314
choice1: 14, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 315
choice1: 370, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 316
choice1: 33, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 317
choice1: 225, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 318
choice1: 350, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 319
choice1: 243, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 320
choice1: 263, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 321
choice1: 302, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 322
choice1: 399, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 323
choice1: 466, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 324
choice1: 375, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 325
choice1: 456, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 326
choice1: 313, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 327
choice1: 289, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 328
choice1: 343, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 329
choice1: 203, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 330
choice1: 12, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 331
choice1: 361, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 332
choice1: 184, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 333
choice1: 412, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 334
choice1: 328, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 335
choice1: 377, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 336
choice1: 203, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 337
choice1: 497, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 338
choice1: 79, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 339
choice1: 33, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 340
choice1: 208, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 341
choice1: 366, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 342
choice1: 284, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 343
choice1: 382, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 344
choice1: 240, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 345
choice1: 170, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 346
choice1: 254, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 347
choice1: 406, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 348
choice1: 55, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 349
choice1: 87, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 350
choice1: 262, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 351
choice1: 56, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 352
choice1: 248, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 353
choice1: 285, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 354
choice1: 270, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 355
choice1: 372, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 356
choice1: 330, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 357
choice1: 80, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 358
choice1: 7, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 359
choice1: 219, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 360
choice1: 102, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 361
choice1: 349, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 362
choice1: 451, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 363
choice1: 260, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 364
choice1: 127, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 365
choice1: 263, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 366
choice1: 442, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 367
choice1: 437, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 368
choice1: 403, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 369
choice1: 356, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 370
choice1: 411, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 371
choice1: 29, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 372
choice1: 70, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 373
choice1: 4, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 374
choice1: 144, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 375
choice1: 316, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 376
choice1: 317, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 377
choice1: 420, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 378
choice1: 355, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 379
choice1: 4, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 380
choice1: 486, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 381
choice1: 474, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 382
choice1: 35, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 383
choice1: 425, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 384
choice1: 245, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 385
choice1: 144, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 386
choice1: 214, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 387
choice1: 490, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 388
choice1: 69, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 389
choice1: 108, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 390
choice1: 73, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 391
choice1: 273, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 392
choice1: 225, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 393
choice1: 28, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 394
choice1: 315, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 395
choice1: 261, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 396
choice1: 453, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 397
choice1: 415, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 398
choice1: 292, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 399
choice1: 5, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 400
choice1: 459, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 401
choice1: 252, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 402
choice1: 268, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 403
choice1: 365, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 404
choice1: 416, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 405
choice1: 351, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 406
choice1: 426, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 407
choice1: 312, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 408
choice1: 165, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 409
choice1: 50, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 410
choice1: 211, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 411
choice1: 261, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 412
choice1: 480, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 413
choice1: 77, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 414
choice1: 61, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 415
choice1: 285, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 416
choice1: 280, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 417
choice1: 234, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 418
choice1: 399, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 419
choice1: 435, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 420
choice1: 50, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 421
choice1: 483, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 422
choice1: 458, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 423
choice1: 306, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 424
choice1: 200, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 425
choice1: 174, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 426
choice1: 1, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 427
choice1: 313, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 428
choice1: 148, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 429
choice1: 25, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 430
choice1: 207, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 431
choice1: 241, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 432
choice1: 198, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 433
choice1: 326, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 434
choice1: 70, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 435
choice1: 411, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 436
choice1: 287, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 437
choice1: 368, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 438
choice1: 186, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 439
choice1: 350, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 440
choice1: 17, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 441
choice1: 20, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 442
choice1: 7, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 443
choice1: 212, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 444
choice1: 320, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 445
choice1: 77, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 446
choice1: 178, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 447
choice1: 457, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 448
choice1: 260, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 449
choice1: 37, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 450
choice1: 22, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 451
choice1: 160, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 452
choice1: 203, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 453
choice1: 334, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 454
choice1: 3, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 455
choice1: 205, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 456
choice1: 459, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 457
choice1: 341, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 458
choice1: 360, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 459
choice1: 481, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 460
choice1: 212, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 461
choice1: 293, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 462
choice1: 242, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 463
choice1: 404, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 464
choice1: 490, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 465
choice1: 434, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 466
choice1: 415, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 467
choice1: 230, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 468
choice1: 374, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 469
choice1: 58, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 470
choice1: 312, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 471
choice1: 54, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 472
choice1: 87, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 473
choice1: 33, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 474
choice1: 391, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 475
choice1: 230, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 476
choice1: 272, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 477
choice1: 226, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 478
choice1: 357, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 479
choice1: 188, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 480
choice1: 153, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 481
choice1: 207, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 482
choice1: 357, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 483
choice1: 290, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 484
choice1: 110, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 485
choice1: 47, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 486
choice1: 104, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 487
choice1: 164, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 488
choice1: 0, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 489
choice1: 148, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 490
choice1: 108, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 491
choice1: 29, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 492
choice1: 372, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 493
choice1: 497, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 494
choice1: 109, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 495
choice1: 297, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 496
choice1: 211, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 497
choice1: 455, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 498
choice1: 59, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 499
choice1: 28, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 500
choice1: 328, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 501
choice1: 36, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 502
choice1: 453, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 503
choice1: 252, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 504
choice1: 144, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 505
choice1: 209, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 506
choice1: 206, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 507
choice1: 221, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 508
choice1: 52, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 509
choice1: 44, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 510
choice1: 470, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 511
choice1: 422, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 512
choice1: 362, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 513
choice1: 245, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 514
choice1: 456, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 515
choice1: 391, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 516
choice1: 404, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 517
choice1: 414, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 518
choice1: 244, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 519
choice1: 20, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 520
choice1: 413, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 521
choice1: 44, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 522
choice1: 77, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 523
choice1: 73, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 524
choice1: 393, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 525
choice1: 63, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 526
choice1: 391, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 527
choice1: 411, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 528
choice1: 122, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 529
choice1: 120, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 530
choice1: 216, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 531
choice1: 193, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 532
choice1: 56, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 533
choice1: 399, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 534
choice1: 313, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 535
choice1: 340, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 536
choice1: 22, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 537
choice1: 178, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 538
choice1: 35, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 539
choice1: 44, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 540
choice1: 92, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 541
choice1: 260, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 542
choice1: 74, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 543
choice1: 180, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 544
choice1: 44, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 545
choice1: 70, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 546
choice1: 335, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 547
choice1: 33, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 548
choice1: 207, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 549
choice1: 136, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 550
choice1: 87, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 551
choice1: 72, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 552
choice1: 196, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 553
choice1: 349, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 554
choice1: 165, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 555
choice1: 222, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 556
choice1: 222, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 557
choice1: 246, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 558
choice1: 178, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 559
choice1: 176, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 560
choice1: 446, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 561
choice1: 457, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 562
choice1: 282, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 563
choice1: 64, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 564
choice1: 411, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 565
choice1: 303, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 566
choice1: 52, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 567
choice1: 387, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 568
choice1: 111, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 569
choice1: 281, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 570
choice1: 201, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 571
choice1: 380, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 572
choice1: 227, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 573
choice1: 227, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 574
choice1: 488, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 575
choice1: 131, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 576
choice1: 337, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 577
choice1: 370, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 578
choice1: 206, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 579
choice1: 125, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 580
choice1: 137, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 581
choice1: 458, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 582
choice1: 166, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 583
choice1: 325, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 584
choice1: 425, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 585
choice1: 24, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 586
choice1: 305, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 587
choice1: 133, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 588
choice1: 137, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 589
choice1: 457, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 590
choice1: 245, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 591
choice1: 357, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 592
choice1: 132, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 593
choice1: 106, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 594
choice1: 164, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 595
choice1: 68, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 596
choice1: 433, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 597
choice1: 490, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 598
choice1: 446, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 599
choice1: 412, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 600
choice1: 318, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 601
choice1: 283, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 602
choice1: 104, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 603
choice1: 123, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 604
choice1: 171, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 605
choice1: 89, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 606
choice1: 269, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 607
choice1: 35, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 608
choice1: 46, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 609
choice1: 414, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 610
choice1: 464, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 611
choice1: 265, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 612
choice1: 369, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 613
choice1: 320, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 614
choice1: 135, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 615
choice1: 421, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 616
choice1: 256, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 617
choice1: 280, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 618
choice1: 28, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 619
choice1: 362, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 620
choice1: 227, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 621
choice1: 110, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 622
choice1: 186, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 623
choice1: 93, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 624
choice1: 7, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 625
choice1: 127, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 626
choice1: 198, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 627
choice1: 310, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 628
choice1: 185, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 629
choice1: 67, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 630
choice1: 466, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 631
choice1: 353, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 632
choice1: 357, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 633
choice1: 173, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 634
choice1: 380, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 635
choice1: 375, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 636
choice1: 336, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 637
choice1: 386, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 638
choice1: 455, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 639
choice1: 493, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 640
choice1: 152, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 641
choice1: 321, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 642
choice1: 147, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 643
choice1: 2, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 644
choice1: 149, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 645
choice1: 27, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 646
choice1: 121, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 647
choice1: 479, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 648
choice1: 269, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 649
choice1: 13, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 650
choice1: 323, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 651
choice1: 172, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 652
choice1: 384, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 653
choice1: 470, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 654
choice1: 252, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 655
choice1: 181, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 656
choice1: 136, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 657
choice1: 207, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 658
choice1: 496, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 659
choice1: 231, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 660
choice1: 397, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 661
choice1: 66, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 662
choice1: 292, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 663
choice1: 306, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 664
choice1: 498, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 665
choice1: 494, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 666
choice1: 382, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 667
choice1: 235, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 668
choice1: 182, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 669
choice1: 354, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 670
choice1: 41, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 671
choice1: 72, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 672
choice1: 301, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 673
choice1: 327, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 674
choice1: 403, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 675
choice1: 34, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 676
choice1: 89, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 677
choice1: 336, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 678
choice1: 477, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 679
choice1: 35, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 680
choice1: 495, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 681
choice1: 19, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 682
choice1: 4, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 683
choice1: 172, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 684
choice1: 354, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 685
choice1: 457, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 686
choice1: 413, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 687
choice1: 357, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 688
choice1: 252, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 689
choice1: 93, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 690
choice1: 124, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 691
choice1: 353, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 692
choice1: 219, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 693
choice1: 474, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 694
choice1: 381, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 695
choice1: 316, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 696
choice1: 381, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 697
choice1: 26, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 698
choice1: 265, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 699
choice1: 99, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 700
choice1: 190, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 701
choice1: 416, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 702
choice1: 246, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 703
choice1: 411, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 704
choice1: 271, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 705
choice1: 10, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 706
choice1: 150, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 707
choice1: 370, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 708
choice1: 466, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 709
choice1: 133, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 710
choice1: 42, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 711
choice1: 4, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 712
choice1: 360, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 713
choice1: 267, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 714
choice1: 451, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 715
choice1: 187, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 716
choice1: 105, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 717
choice1: 147, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 718
choice1: 204, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 719
choice1: 280, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 720
choice1: 214, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 721
choice1: 291, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 722
choice1: 298, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 723
choice1: 182, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 724
choice1: 190, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 725
choice1: 182, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 726
choice1: 31, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 727
choice1: 381, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 728
choice1: 38, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 729
choice1: 156, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 730
choice1: 3, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 731
choice1: 164, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 732
choice1: 251, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 733
choice1: 359, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 734
choice1: 29, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 735
choice1: 126, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 736
choice1: 191, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 737
choice1: 462, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 738
choice1: 439, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 739
choice1: 452, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 740
choice1: 187, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 741
choice1: 374, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 742
choice1: 458, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 743
choice1: 460, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 744
choice1: 439, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 745
choice1: 469, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 746
choice1: 270, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 747
choice1: 128, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 748
choice1: 228, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 749
choice1: 331, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 750
choice1: 246, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 751
choice1: 141, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 752
choice1: 121, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 753
choice1: 382, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 754
choice1: 147, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 755
choice1: 229, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 756
choice1: 120, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 757
choice1: 244, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 758
choice1: 37, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 759
choice1: 399, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 760
choice1: 404, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 761
choice1: 139, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 762
choice1: 183, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 763
choice1: 317, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 764
choice1: 421, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 765
choice1: 435, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 766
choice1: 43, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 767
choice1: 422, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 768
choice1: 94, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 769
choice1: 394, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 770
choice1: 467, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 771
choice1: 197, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 772
choice1: 10, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 773
choice1: 96, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 774
choice1: 28, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 775
choice1: 228, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 776
choice1: 407, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 777
choice1: 146, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 778
choice1: 59, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 779
choice1: 360, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 780
choice1: 70, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 781
choice1: 295, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 782
choice1: 339, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 783
choice1: 157, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 784
choice1: 230, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 785
choice1: 444, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 786
choice1: 448, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 787
choice1: 146, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 788
choice1: 18, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 789
choice1: 225, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 790
choice1: 75, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 791
choice1: 454, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 792
choice1: 139, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 793
choice1: 80, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 794
choice1: 16, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 795
choice1: 95, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 796
choice1: 376, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 797
choice1: 152, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 798
choice1: 28, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 799
choice1: 135, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 800
choice1: 344, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 801
choice1: 152, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 802
choice1: 405, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 803
choice1: 65, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 804
choice1: 441, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 805
choice1: 416, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 806
choice1: 27, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 807
choice1: 372, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 808
choice1: 330, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 809
choice1: 407, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 810
choice1: 95, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 811
choice1: 344, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 812
choice1: 293, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 813
choice1: 207, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 814
choice1: 235, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 815
choice1: 174, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 816
choice1: 21, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 817
choice1: 370, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 818
choice1: 356, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 819
choice1: 215, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 820
choice1: 132, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 821
choice1: 182, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 822
choice1: 64, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 823
choice1: 271, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 824
choice1: 275, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 825
choice1: 407, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 826
choice1: 254, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 827
choice1: 195, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 828
choice1: 404, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 829
choice1: 8, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 830
choice1: 55, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 831
choice1: 318, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 832
choice1: 289, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 833
choice1: 391, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 834
choice1: 282, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 835
choice1: 492, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 836
choice1: 35, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 837
choice1: 179, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 838
choice1: 271, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 839
choice1: 12, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 840
choice1: 166, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 841
choice1: 274, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 842
choice1: 439, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 843
choice1: 187, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 844
choice1: 379, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 845
choice1: 316, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 846
choice1: 145, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 847
choice1: 443, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 848
choice1: 470, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 849
choice1: 53, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 850
choice1: 81, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 851
choice1: 62, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 852
choice1: 293, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 853
choice1: 188, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 854
choice1: 419, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 855
choice1: 382, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 856
choice1: 4, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 857
choice1: 95, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 858
choice1: 370, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 859
choice1: 351, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 860
choice1: 251, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 861
choice1: 107, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 862
choice1: 409, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 863
choice1: 490, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 864
choice1: 71, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 865
choice1: 4, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 866
choice1: 206, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 867
choice1: 332, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 868
choice1: 468, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 869
choice1: 436, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 870
choice1: 358, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 871
choice1: 68, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 872
choice1: 412, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 873
choice1: 269, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 874
choice1: 140, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 875
choice1: 132, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 876
choice1: 78, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 877
choice1: 229, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 878
choice1: 57, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 879
choice1: 42, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 880
choice1: 70, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 881
choice1: 198, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 882
choice1: 374, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 883
choice1: 19, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 884
choice1: 270, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 885
choice1: 292, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 886
choice1: 488, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 887
choice1: 16, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 888
choice1: 94, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 889
choice1: 120, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 890
choice1: 146, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 891
choice1: 41, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 892
choice1: 461, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 893
choice1: 5, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 894
choice1: 390, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 895
choice1: 434, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 896
choice1: 2, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 897
choice1: 440, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 898
choice1: 68, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 899
choice1: 35, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 900
choice1: 223, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 901
choice1: 328, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 902
choice1: 351, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 903
choice1: 416, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 904
choice1: 446, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 905
choice1: 74, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 906
choice1: 147, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 907
choice1: 120, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 908
choice1: 13, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 909
choice1: 153, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 910
choice1: 87, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 911
choice1: 171, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 912
choice1: 486, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 913
choice1: 67, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 914
choice1: 159, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 915
choice1: 94, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 916
choice1: 55, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 917
choice1: 406, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 918
choice1: 295, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 919
choice1: 201, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 920
choice1: 462, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 921
choice1: 412, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 922
choice1: 160, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 923
choice1: 16, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 924
choice1: 336, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 925
choice1: 238, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 926
choice1: 159, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 927
choice1: 219, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 928
choice1: 238, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 929
choice1: 112, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 930
choice1: 48, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 931
choice1: 318, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 932
choice1: 28, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 933
choice1: 138, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 934
choice1: 340, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 935
choice1: 19, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 936
choice1: 331, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 937
choice1: 454, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 938
choice1: 206, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 939
choice1: 45, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 940
choice1: 129, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 941
choice1: 186, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 942
choice1: 422, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 943
choice1: 15, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 944
choice1: 476, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 945
choice1: 50, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 946
choice1: 231, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 947
choice1: 263, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 948
choice1: 305, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 949
choice1: 290, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 950
choice1: 275, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 951
choice1: 127, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 952
choice1: 247, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 953
choice1: 14, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 954
choice1: 365, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 955
choice1: 333, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 956
choice1: 431, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 957
choice1: 435, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 958
choice1: 204, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 959
choice1: 343, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 960
choice1: 115, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 961
choice1: 344, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 962
choice1: 267, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 963
choice1: 79, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 964
choice1: 159, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 965
choice1: 106, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 966
choice1: 26, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 967
choice1: 157, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 968
choice1: 413, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 969
choice1: 125, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 970
choice1: 271, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 971
choice1: 346, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 972
choice1: 47, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 973
choice1: 230, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 974
choice1: 482, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 975
choice1: 30, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 976
choice1: 330, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 977
choice1: 272, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 978
choice1: 325, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 979
choice1: 144, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 980
choice1: 227, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 981
choice1: 493, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 982
choice1: 146, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 983
choice1: 164, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 984
choice1: 445, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 985
choice1: 394, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 986
choice1: 65, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 987
choice1: 82, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 988
choice1: 280, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 989
choice1: 247, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 990
choice1: 163, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 991
choice1: 124, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 992
choice1: 490, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 993
choice1: 6, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 994
choice1: 415, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 995
choice1: 23, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 996
choice1: 19, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 997
choice1: 12, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 998
choice1: 460, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 999
choice1: 395, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1000
choice1: 466, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1001
choice1: 67, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1002
choice1: 324, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1003
choice1: 350, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1004
choice1: 39, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1005
choice1: 209, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1006
choice1: 435, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1007
choice1: 154, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1008
choice1: 99, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1009
choice1: 444, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1010
choice1: 174, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1011
choice1: 18, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1012
choice1: 4, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1013
choice1: 167, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1014
choice1: 464, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1015
choice1: 78, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1016
choice1: 298, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1017
choice1: 223, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1018
choice1: 368, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1019
choice1: 247, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1020
choice1: 173, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1021
choice1: 489, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1022
choice1: 82, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1023
choice1: 409, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1024
choice1: 6, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1025
choice1: 271, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1026
choice1: 345, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1027
choice1: 2, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1028
choice1: 350, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1029
choice1: 194, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1030
choice1: 179, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1031
choice1: 141, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1032
choice1: 129, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1033
choice1: 229, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1034
choice1: 183, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1035
choice1: 397, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1036
choice1: 191, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1037
choice1: 498, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1038
choice1: 387, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1039
choice1: 458, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1040
choice1: 160, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1041
choice1: 494, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1042
choice1: 415, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1043
choice1: 33, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1044
choice1: 451, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1045
choice1: 81, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1046
choice1: 384, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1047
choice1: 1, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1048
choice1: 121, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1049
choice1: 131, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1050
choice1: 322, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1051
choice1: 17, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1052
choice1: 248, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1053
choice1: 428, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1054
choice1: 69, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1055
choice1: 85, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1056
choice1: 307, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1057
choice1: 84, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1058
choice1: 484, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1059
choice1: 348, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1060
choice1: 342, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1061
choice1: 123, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1062
choice1: 339, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1063
choice1: 35, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1064
choice1: 443, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1065
choice1: 252, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1066
choice1: 104, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1067
choice1: 58, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1068
choice1: 264, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1069
choice1: 416, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1070
choice1: 104, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1071
choice1: 471, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1072
choice1: 441, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1073
choice1: 84, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1074
choice1: 228, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1075
choice1: 169, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1076
choice1: 282, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1077
choice1: 290, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1078
choice1: 266, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1079
choice1: 297, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1080
choice1: 158, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1081
choice1: 89, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1082
choice1: 16, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1083
choice1: 460, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1084
choice1: 224, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1085
choice1: 226, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1086
choice1: 269, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1087
choice1: 346, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1088
choice1: 30, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1089
choice1: 31, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1090
choice1: 385, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1091
choice1: 366, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1092
choice1: 166, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1093
choice1: 393, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1094
choice1: 324, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1095
choice1: 135, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1096
choice1: 317, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1097
choice1: 121, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1098
choice1: 380, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1099
choice1: 317, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1100
choice1: 44, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1101
choice1: 190, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1102
choice1: 48, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1103
choice1: 167, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1104
choice1: 255, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1105
choice1: 418, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1106
choice1: 407, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1107
choice1: 125, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1108
choice1: 251, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1109
choice1: 104, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1110
choice1: 364, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1111
choice1: 129, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1112
choice1: 53, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1113
choice1: 468, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1114
choice1: 40, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1115
choice1: 302, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1116
choice1: 327, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1117
choice1: 132, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1118
choice1: 107, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1119
choice1: 416, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1120
choice1: 241, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1121
choice1: 48, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1122
choice1: 9, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1123
choice1: 2, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1124
choice1: 139, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1125
choice1: 458, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1126
choice1: 236, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1127
choice1: 192, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1128
choice1: 318, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1129
choice1: 204, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1130
choice1: 281, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1131
choice1: 139, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1132
choice1: 213, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1133
choice1: 389, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1134
choice1: 444, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1135
choice1: 94, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1136
choice1: 238, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1137
choice1: 25, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1138
choice1: 155, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1139
choice1: 85, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1140
choice1: 346, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1141
choice1: 34, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1142
choice1: 404, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1143
choice1: 243, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1144
choice1: 254, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1145
choice1: 145, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1146
choice1: 189, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1147
choice1: 351, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1148
choice1: 279, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1149
choice1: 126, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1150
choice1: 34, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1151
choice1: 42, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1152
choice1: 147, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1153
choice1: 355, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1154
choice1: 233, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1155
choice1: 330, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1156
choice1: 353, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1157
choice1: 212, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1158
choice1: 368, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1159
choice1: 359, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1160
choice1: 83, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1161
choice1: 221, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1162
choice1: 339, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1163
choice1: 142, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1164
choice1: 30, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1165
choice1: 45, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1166
choice1: 303, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1167
choice1: 52, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1168
choice1: 302, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1169
choice1: 59, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1170
choice1: 140, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1171
choice1: 211, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1172
choice1: 496, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1173
choice1: 112, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1174
choice1: 116, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1175
choice1: 118, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1176
choice1: 123, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1177
choice1: 73, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1178
choice1: 67, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1179
choice1: 91, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1180
choice1: 51, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1181
choice1: 486, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1182
choice1: 6, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1183
choice1: 32, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1184
choice1: 376, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1185
choice1: 446, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1186
choice1: 164, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1187
choice1: 335, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1188
choice1: 386, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1189
choice1: 49, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1190
choice1: 337, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1191
choice1: 363, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1192
choice1: 376, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1193
choice1: 485, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1194
choice1: 376, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1195
choice1: 238, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1196
choice1: 172, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1197
choice1: 219, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1198
choice1: 138, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1199
choice1: 66, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1200
choice1: 485, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1201
choice1: 120, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1202
choice1: 407, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1203
choice1: 300, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1204
choice1: 16, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1205
choice1: 445, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1206
choice1: 224, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1207
choice1: 295, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1208
choice1: 365, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1209
choice1: 492, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1210
choice1: 90, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1211
choice1: 153, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1212
choice1: 317, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1213
choice1: 126, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1214
choice1: 74, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1215
choice1: 349, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1216
choice1: 451, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1217
choice1: 415, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1218
choice1: 367, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1219
choice1: 90, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1220
choice1: 438, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1221
choice1: 143, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1222
choice1: 4, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1223
choice1: 491, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1224
choice1: 215, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1225
choice1: 251, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1226
choice1: 437, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1227
choice1: 175, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1228
choice1: 144, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1229
choice1: 434, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1230
choice1: 273, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1231
choice1: 360, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1232
choice1: 133, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1233
choice1: 334, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1234
choice1: 111, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1235
choice1: 448, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1236
choice1: 494, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1237
choice1: 146, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1238
choice1: 324, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1239
choice1: 110, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1240
choice1: 286, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1241
choice1: 323, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1242
choice1: 44, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1243
choice1: 457, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1244
choice1: 348, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1245
choice1: 383, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1246
choice1: 104, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1247
choice1: 307, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1248
choice1: 109, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1249
choice1: 252, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1250
choice1: 386, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1251
choice1: 85, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1252
choice1: 364, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1253
choice1: 247, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1254
choice1: 343, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1255
choice1: 417, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1256
choice1: 498, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1257
choice1: 331, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1258
choice1: 259, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1259
choice1: 57, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1260
choice1: 152, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1261
choice1: 86, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1262
choice1: 257, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1263
choice1: 158, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1264
choice1: 83, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1265
choice1: 340, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1266
choice1: 252, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1267
choice1: 82, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1268
choice1: 34, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1269
choice1: 144, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1270
choice1: 66, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1271
choice1: 297, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1272
choice1: 210, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1273
choice1: 335, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1274
choice1: 33, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1275
choice1: 81, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1276
choice1: 37, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1277
choice1: 30, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1278
choice1: 386, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1279
choice1: 407, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1280
choice1: 125, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1281
choice1: 290, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1282
choice1: 1, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1283
choice1: 298, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1284
choice1: 333, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1285
choice1: 187, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1286
choice1: 241, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1287
choice1: 17, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1288
choice1: 451, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1289
choice1: 95, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1290
choice1: 130, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1291
choice1: 305, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1292
choice1: 117, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1293
choice1: 70, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1294
choice1: 4, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1295
choice1: 293, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1296
choice1: 165, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1297
choice1: 204, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1298
choice1: 401, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1299
choice1: 95, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1300
choice1: 448, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1301
choice1: 278, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1302
choice1: 16, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1303
choice1: 264, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1304
choice1: 322, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1305
choice1: 48, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1306
choice1: 206, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1307
choice1: 167, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1308
choice1: 404, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1309
choice1: 347, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1310
choice1: 21, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1311
choice1: 440, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1312
choice1: 29, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1313
choice1: 224, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1314
choice1: 305, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1315
choice1: 464, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1316
choice1: 421, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1317
choice1: 442, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1318
choice1: 102, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1319
choice1: 198, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1320
choice1: 480, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1321
choice1: 159, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1322
choice1: 137, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1323
choice1: 480, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1324
choice1: 252, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1325
choice1: 432, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1326
choice1: 32, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1327
choice1: 380, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1328
choice1: 200, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1329
choice1: 464, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1330
choice1: 427, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1331
choice1: 351, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1332
choice1: 370, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1333
choice1: 93, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1334
choice1: 120, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1335
choice1: 472, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1336
choice1: 414, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1337
choice1: 411, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1338
choice1: 451, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1339
choice1: 24, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1340
choice1: 61, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1341
choice1: 106, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1342
choice1: 315, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1343
choice1: 443, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1344
choice1: 132, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1345
choice1: 484, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1346
choice1: 238, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1347
choice1: 28, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1348
choice1: 271, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1349
choice1: 191, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1350
choice1: 337, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1351
choice1: 10, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1352
choice1: 129, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1353
choice1: 437, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1354
choice1: 292, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1355
choice1: 481, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1356
choice1: 380, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1357
choice1: 54, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1358
choice1: 316, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1359
choice1: 389, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1360
choice1: 240, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1361
choice1: 131, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1362
choice1: 215, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1363
choice1: 321, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1364
choice1: 59, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1365
choice1: 5, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1366
choice1: 283, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1367
choice1: 407, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1368
choice1: 13, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1369
choice1: 388, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1370
choice1: 434, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1371
choice1: 6, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1372
choice1: 436, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1373
choice1: 344, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1374
choice1: 206, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1375
choice1: 364, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1376
choice1: 364, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1377
choice1: 194, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1378
choice1: 106, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1379
choice1: 369, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1380
choice1: 222, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1381
choice1: 350, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1382
choice1: 382, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1383
choice1: 79, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1384
choice1: 177, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1385
choice1: 143, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1386
choice1: 247, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1387
choice1: 84, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1388
choice1: 47, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1389
choice1: 408, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1390
choice1: 312, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1391
choice1: 244, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1392
choice1: 193, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1393
choice1: 144, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1394
choice1: 99, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1395
choice1: 414, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1396
choice1: 216, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1397
choice1: 439, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1398
choice1: 453, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1399
choice1: 331, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1400
choice1: 84, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1401
choice1: 320, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1402
choice1: 267, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1403
choice1: 328, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1404
choice1: 264, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1405
choice1: 367, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1406
choice1: 408, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1407
choice1: 144, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1408
choice1: 317, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1409
choice1: 348, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1410
choice1: 28, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1411
choice1: 498, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1412
choice1: 117, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1413
choice1: 49, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1414
choice1: 318, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1415
choice1: 394, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1416
choice1: 57, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1417
choice1: 201, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1418
choice1: 211, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1419
choice1: 308, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1420
choice1: 75, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1421
choice1: 294, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1422
choice1: 475, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1423
choice1: 345, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1424
choice1: 27, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1425
choice1: 353, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1426
choice1: 163, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1427
choice1: 125, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1428
choice1: 248, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1429
choice1: 476, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1430
choice1: 381, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1431
choice1: 385, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1432
choice1: 159, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1433
choice1: 121, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1434
choice1: 453, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1435
choice1: 447, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1436
choice1: 273, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1437
choice1: 436, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1438
choice1: 432, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1439
choice1: 118, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1440
choice1: 303, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1441
choice1: 441, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1442
choice1: 90, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1443
choice1: 25, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1444
choice1: 493, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1445
choice1: 12, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1446
choice1: 381, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1447
choice1: 164, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1448
choice1: 141, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1449
choice1: 430, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1450
choice1: 16, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1451
choice1: 353, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1452
choice1: 274, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1453
choice1: 443, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1454
choice1: 282, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1455
choice1: 177, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1456
choice1: 77, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1457
choice1: 251, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1458
choice1: 21, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1459
choice1: 476, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1460
choice1: 83, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1461
choice1: 196, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1462
choice1: 145, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1463
choice1: 436, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1464
choice1: 7, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1465
choice1: 238, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1466
choice1: 375, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1467
choice1: 287, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1468
choice1: 341, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1469
choice1: 371, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1470
choice1: 370, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1471
choice1: 244, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1472
choice1: 479, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1473
choice1: 496, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1474
choice1: 189, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1475
choice1: 303, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1476
choice1: 400, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1477
choice1: 414, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1478
choice1: 81, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1479
choice1: 219, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1480
choice1: 402, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1481
choice1: 126, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1482
choice1: 237, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1483
choice1: 96, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1484
choice1: 232, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1485
choice1: 232, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1486
choice1: 101, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1487
choice1: 86, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1488
choice1: 156, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1489
choice1: 173, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1490
choice1: 316, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1491
choice1: 219, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1492
choice1: 338, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1493
choice1: 114, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1494
choice1: 383, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1495
choice1: 330, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1496
choice1: 380, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1497
choice1: 83, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1498
choice1: 262, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1499
choice1: 280, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1500
choice1: 278, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1501
choice1: 83, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1502
choice1: 430, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1503
choice1: 370, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1504
choice1: 251, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1505
choice1: 297, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1506
choice1: 453, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1507
choice1: 108, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1508
choice1: 228, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1509
choice1: 460, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1510
choice1: 260, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1511
choice1: 467, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1512
choice1: 391, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1513
choice1: 415, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1514
choice1: 16, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1515
choice1: 107, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1516
choice1: 121, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1517
choice1: 418, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1518
choice1: 282, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1519
choice1: 479, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1520
choice1: 135, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1521
choice1: 75, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1522
choice1: 483, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1523
choice1: 360, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1524
choice1: 326, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1525
choice1: 185, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1526
choice1: 18, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1527
choice1: 122, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1528
choice1: 423, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1529
choice1: 256, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1530
choice1: 283, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1531
choice1: 172, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1532
choice1: 331, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1533
choice1: 14, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1534
choice1: 12, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1535
choice1: 498, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1536
choice1: 305, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1537
choice1: 48, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1538
choice1: 270, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1539
choice1: 223, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1540
choice1: 74, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1541
choice1: 160, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1542
choice1: 276, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1543
choice1: 364, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1544
choice1: 439, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1545
choice1: 178, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1546
choice1: 173, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1547
choice1: 175, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1548
choice1: 237, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1549
choice1: 340, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1550
choice1: 344, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1551
choice1: 76, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1552
choice1: 242, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1553
choice1: 132, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1554
choice1: 20, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1555
choice1: 438, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1556
choice1: 323, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1557
choice1: 335, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1558
choice1: 457, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1559
choice1: 217, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1560
choice1: 489, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1561
choice1: 442, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1562
choice1: 124, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1563
choice1: 423, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1564
choice1: 122, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1565
choice1: 483, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1566
choice1: 122, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1567
choice1: 47, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1568
choice1: 282, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1569
choice1: 282, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1570
choice1: 62, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1571
choice1: 314, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1572
choice1: 304, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1573
choice1: 130, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1574
choice1: 302, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1575
choice1: 1, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1576
choice1: 463, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1577
choice1: 171, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1578
choice1: 201, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1579
choice1: 300, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1580
choice1: 434, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1581
choice1: 226, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1582
choice1: 417, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1583
choice1: 381, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1584
choice1: 4, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1585
choice1: 443, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1586
choice1: 0, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1587
choice1: 195, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1588
choice1: 196, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1589
choice1: 267, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1590
choice1: 324, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1591
choice1: 25, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1592
choice1: 146, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1593
choice1: 166, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1594
choice1: 435, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1595
choice1: 395, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1596
choice1: 48, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1597
choice1: 309, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1598
choice1: 100, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1599
choice1: 439, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1600
choice1: 30, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1601
choice1: 164, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1602
choice1: 351, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1603
choice1: 276, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1604
choice1: 379, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1605
choice1: 469, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1606
choice1: 281, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1607
choice1: 361, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1608
choice1: 397, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1609
choice1: 485, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1610
choice1: 339, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1611
choice1: 355, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1612
choice1: 47, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1613
choice1: 397, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1614
choice1: 387, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1615
choice1: 247, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1616
choice1: 44, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1617
choice1: 267, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1618
choice1: 152, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1619
choice1: 47, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1620
choice1: 389, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1621
choice1: 428, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1622
choice1: 449, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1623
choice1: 156, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1624
choice1: 1, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1625
choice1: 185, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1626
choice1: 93, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1627
choice1: 216, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1628
choice1: 97, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1629
choice1: 126, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1630
choice1: 413, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1631
choice1: 371, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1632
choice1: 112, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1633
choice1: 402, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1634
choice1: 134, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1635
choice1: 176, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1636
choice1: 383, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1637
choice1: 135, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1638
choice1: 328, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1639
choice1: 273, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1640
choice1: 324, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1641
choice1: 31, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1642
choice1: 213, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1643
choice1: 73, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1644
choice1: 444, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1645
choice1: 466, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1646
choice1: 416, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1647
choice1: 213, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1648
choice1: 163, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1649
choice1: 113, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1650
choice1: 66, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1651
choice1: 414, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1652
choice1: 339, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1653
choice1: 309, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1654
choice1: 112, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1655
choice1: 410, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1656
choice1: 285, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1657
choice1: 175, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1658
choice1: 389, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1659
choice1: 431, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1660
choice1: 432, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1661
choice1: 434, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1662
choice1: 55, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1663
choice1: 360, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1664
choice1: 281, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1665
choice1: 456, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1666
choice1: 292, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1667
choice1: 218, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1668
choice1: 321, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1669
choice1: 116, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1670
choice1: 499, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1671
choice1: 95, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1672
choice1: 259, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1673
choice1: 97, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1674
choice1: 451, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1675
choice1: 132, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1676
choice1: 39, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1677
choice1: 259, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1678
choice1: 164, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1679
choice1: 241, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1680
choice1: 248, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1681
choice1: 349, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1682
choice1: 119, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1683
choice1: 103, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1684
choice1: 170, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1685
choice1: 98, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1686
choice1: 444, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1687
choice1: 197, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1688
choice1: 303, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1689
choice1: 297, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1690
choice1: 84, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1691
choice1: 422, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1692
choice1: 320, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1693
choice1: 194, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1694
choice1: 268, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1695
choice1: 345, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1696
choice1: 8, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1697
choice1: 244, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1698
choice1: 319, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1699
choice1: 425, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1700
choice1: 387, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1701
choice1: 437, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1702
choice1: 346, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1703
choice1: 129, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1704
choice1: 140, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1705
choice1: 302, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1706
choice1: 437, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1707
choice1: 329, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1708
choice1: 463, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1709
choice1: 230, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1710
choice1: 399, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1711
choice1: 35, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1712
choice1: 104, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1713
choice1: 372, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1714
choice1: 405, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1715
choice1: 188, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1716
choice1: 53, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1717
choice1: 334, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1718
choice1: 394, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1719
choice1: 364, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1720
choice1: 215, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1721
choice1: 168, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1722
choice1: 102, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1723
choice1: 17, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1724
choice1: 272, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1725
choice1: 77, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1726
choice1: 75, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1727
choice1: 373, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1728
choice1: 4, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1729
choice1: 180, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1730
choice1: 317, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1731
choice1: 182, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1732
choice1: 206, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1733
choice1: 1, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1734
choice1: 115, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1735
choice1: 198, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1736
choice1: 399, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1737
choice1: 442, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1738
choice1: 175, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1739
choice1: 239, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1740
choice1: 479, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1741
choice1: 226, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1742
choice1: 237, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1743
choice1: 483, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1744
choice1: 469, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1745
choice1: 229, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1746
choice1: 140, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1747
choice1: 311, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1748
choice1: 467, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1749
choice1: 346, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1750
choice1: 51, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1751
choice1: 59, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1752
choice1: 81, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1753
choice1: 219, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1754
choice1: 483, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1755
choice1: 283, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1756
choice1: 206, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1757
choice1: 292, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1758
choice1: 227, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1759
choice1: 111, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1760
choice1: 433, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1761
choice1: 89, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1762
choice1: 19, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1763
choice1: 210, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1764
choice1: 436, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1765
choice1: 77, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1766
choice1: 433, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1767
choice1: 231, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1768
choice1: 494, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1769
choice1: 231, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1770
choice1: 23, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1771
choice1: 326, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1772
choice1: 196, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1773
choice1: 58, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1774
choice1: 377, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1775
choice1: 61, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1776
choice1: 48, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1777
choice1: 21, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1778
choice1: 63, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1779
choice1: 336, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1780
choice1: 495, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1781
choice1: 330, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1782
choice1: 427, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1783
choice1: 486, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1784
choice1: 405, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1785
choice1: 173, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1786
choice1: 86, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1787
choice1: 404, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1788
choice1: 248, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1789
choice1: 470, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1790
choice1: 458, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1791
choice1: 212, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1792
choice1: 455, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1793
choice1: 262, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1794
choice1: 227, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1795
choice1: 399, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1796
choice1: 198, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1797
choice1: 15, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1798
choice1: 21, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1799
choice1: 58, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1800
choice1: 84, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1801
choice1: 491, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1802
choice1: 484, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1803
choice1: 162, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1804
choice1: 16, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1805
choice1: 120, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1806
choice1: 127, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1807
choice1: 422, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1808
choice1: 18, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1809
choice1: 253, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1810
choice1: 473, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1811
choice1: 280, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1812
choice1: 221, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1813
choice1: 44, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1814
choice1: 147, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1815
choice1: 474, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1816
choice1: 68, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1817
choice1: 317, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1818
choice1: 326, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1819
choice1: 68, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1820
choice1: 54, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1821
choice1: 366, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1822
choice1: 18, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1823
choice1: 317, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1824
choice1: 489, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1825
choice1: 89, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1826
choice1: 285, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1827
choice1: 241, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1828
choice1: 60, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1829
choice1: 303, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1830
choice1: 164, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1831
choice1: 2, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1832
choice1: 163, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1833
choice1: 200, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1834
choice1: 121, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1835
choice1: 369, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1836
choice1: 267, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1837
choice1: 198, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1838
choice1: 65, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1839
choice1: 402, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1840
choice1: 392, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1841
choice1: 184, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1842
choice1: 288, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1843
choice1: 403, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1844
choice1: 47, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1845
choice1: 330, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1846
choice1: 21, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1847
choice1: 334, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1848
choice1: 256, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1849
choice1: 310, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1850
choice1: 47, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1851
choice1: 398, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1852
choice1: 144, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1853
choice1: 28, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1854
choice1: 333, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1855
choice1: 237, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1856
choice1: 90, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1857
choice1: 219, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1858
choice1: 181, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1859
choice1: 449, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1860
choice1: 284, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1861
choice1: 340, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1862
choice1: 43, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1863
choice1: 312, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1864
choice1: 196, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1865
choice1: 487, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1866
choice1: 285, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1867
choice1: 394, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1868
choice1: 349, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1869
choice1: 238, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1870
choice1: 172, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1871
choice1: 32, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1872
choice1: 263, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1873
choice1: 254, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1874
choice1: 407, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1875
choice1: 189, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1876
choice1: 167, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1877
choice1: 59, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1878
choice1: 249, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1879
choice1: 131, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1880
choice1: 89, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1881
choice1: 45, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1882
choice1: 101, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1883
choice1: 239, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1884
choice1: 168, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1885
choice1: 40, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1886
choice1: 70, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1887
choice1: 32, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1888
choice1: 388, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1889
choice1: 334, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1890
choice1: 264, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1891
choice1: 493, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1892
choice1: 368, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1893
choice1: 171, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1894
choice1: 300, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1895
choice1: 213, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1896
choice1: 451, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1897
choice1: 197, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1898
choice1: 351, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1899
choice1: 498, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1900
choice1: 427, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1901
choice1: 144, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1902
choice1: 41, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1903
choice1: 263, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1904
choice1: 133, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1905
choice1: 246, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1906
choice1: 314, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1907
choice1: 171, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1908
choice1: 42, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1909
choice1: 469, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1910
choice1: 492, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1911
choice1: 21, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1912
choice1: 104, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1913
choice1: 136, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1914
choice1: 101, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1915
choice1: 296, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1916
choice1: 28, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1917
choice1: 212, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1918
choice1: 219, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1919
choice1: 399, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1920
choice1: 307, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1921
choice1: 144, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1922
choice1: 152, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1923
choice1: 390, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1924
choice1: 400, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1925
choice1: 136, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1926
choice1: 226, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1927
choice1: 449, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1928
choice1: 375, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1929
choice1: 241, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1930
choice1: 305, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1931
choice1: 440, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1932
choice1: 169, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1933
choice1: 394, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1934
choice1: 296, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1935
choice1: 79, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1936
choice1: 382, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1937
choice1: 97, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1938
choice1: 427, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1939
choice1: 383, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1940
choice1: 207, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1941
choice1: 412, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1942
choice1: 215, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1943
choice1: 315, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1944
choice1: 287, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1945
choice1: 87, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1946
choice1: 95, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1947
choice1: 142, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1948
choice1: 337, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1949
choice1: 208, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1950
choice1: 21, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1951
choice1: 434, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1952
choice1: 234, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1953
choice1: 148, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1954
choice1: 264, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1955
choice1: 176, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1956
choice1: 139, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1957
choice1: 499, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1958
choice1: 324, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1959
choice1: 438, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1960
choice1: 141, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1961
choice1: 421, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1962
choice1: 110, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1963
choice1: 64, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1964
choice1: 298, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1965
choice1: 334, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1966
choice1: 201, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1967
choice1: 486, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1968
choice1: 322, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1969
choice1: 220, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1970
choice1: 59, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1971
choice1: 133, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1972
choice1: 295, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1973
choice1: 114, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1974
choice1: 308, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1975
choice1: 37, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1976
choice1: 360, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1977
choice1: 178, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1978
choice1: 55, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1979
choice1: 170, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1980
choice1: 493, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1981
choice1: 145, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1982
choice1: 260, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1983
choice1: 251, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1984
choice1: 304, choice2: 0, choice3: 0, handpos: 1, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1985
choice1: 334, choice2: 0, choice3: 0, handpos: 2, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1986
choice1: 337, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1987
choice1: 172, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1988
choice1: 498, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1989
choice1: 39, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1990
choice1: 250, choice2: 0, choice3: 0, handpos: 4, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1991
choice1: 207, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1992
choice1: 28, choice2: 0, choice3: 0, handpos: 2, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1993
choice1: 266, choice2: 0, choice3: 0, handpos: 0, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1994
choice1: 461, choice2: 0, choice3: 0, handpos: 1, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1995
choice1: 434, choice2: 0, choice3: 0, handpos: 4, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1996
choice1: 452, choice2: 0, choice3: 0, handpos: 0, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1997
choice1: 477, choice2: 0, choice3: 0, handpos: 3, p: 0
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1998
choice1: 454, choice2: 0, choice3: 0, handpos: 3, p: 1
TEST FAILED: 'r == 0' on line 28.
TEST SUCCESSFULLY COMPLETED.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'post->discardCount[p] != pre.discardCount[p]' on line 32.
TEST SUCCESSFULLY COMPLETED.
TEST FAILED: 'memcmp(&pre, post, sizeof(struct gameState)) != 0' on line 35.
end round 1999
TESTS COMPLETED
Function 'updateCoins'
Lines executed:0.00% of 11
Branches executed:0.00% of 8
Taken at least once:0.00% of 8
No calls

Function 'gainCard'
Lines executed:0.00% of 16
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 4

Function 'discardCard'
Lines executed:0.00% of 13
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
No calls

Function 'cardEffect'
Lines executed:0.00% of 192
Branches executed:0.00% of 170
Taken at least once:0.00% of 170
Calls executed:0.00% of 50

Function 'Steward'
Lines executed:0.00% of 10
Branches executed:0.00% of 4
Taken at least once:0.00% of 4
Calls executed:0.00% of 5

Function 'Feast'
Lines executed:0.00% of 18
Branches executed:0.00% of 10
Taken at least once:0.00% of 10
Calls executed:0.00% of 6

Function 'Remodel'
Lines executed:0.00% of 12
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 5

Function 'Smithy'
Lines executed:0.00% of 6
Branches executed:0.00% of 2
Taken at least once:0.00% of 2
Calls executed:0.00% of 2

Function 'Adventurer'
Lines executed:0.00% of 17
Branches executed:0.00% of 12
Taken at least once:0.00% of 12
Calls executed:0.00% of 2

Function 'getCost'
Lines executed:0.00% of 30
Branches executed:0.00% of 28
Taken at least once:0.00% of 28
No calls

Function 'drawCard'
Lines executed:0.00% of 22
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 1

Function 'getWinners'
Lines executed:0.00% of 24
Branches executed:0.00% of 22
Taken at least once:0.00% of 22
Calls executed:0.00% of 2

Function 'scoreFor'
Lines executed:0.00% of 24
Branches executed:0.00% of 42
Taken at least once:0.00% of 42
Calls executed:0.00% of 3

Function 'isGameOver'
Lines executed:0.00% of 10
Branches executed:0.00% of 8
Taken at least once:0.00% of 8
No calls

Function 'endTurn'
Lines executed:0.00% of 20
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 3

Function 'whoseTurn'
Lines executed:0.00% of 2
No branches
No calls

Function 'fullDeckCount'
Lines executed:0.00% of 9
Branches executed:0.00% of 12
Taken at least once:0.00% of 12
No calls

Function 'supplyCount'
Lines executed:0.00% of 2
No branches
No calls

Function 'handCard'
Lines executed:0.00% of 3
No branches
Calls executed:0.00% of 1

Function 'numHandCards'
Lines executed:0.00% of 2
No branches
Calls executed:0.00% of 1

Function 'buyCard'
Lines executed:0.00% of 13
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 4

Function 'playCard'
Lines executed:28.57% of 14
Branches executed:20.00% of 10
Taken at least once:10.00% of 10
Calls executed:0.00% of 3

Function 'shuffle'
Lines executed:0.00% of 16
Branches executed:0.00% of 8
Taken at least once:0.00% of 8
Calls executed:0.00% of 2

Function 'initializeGame'
Lines executed:0.00% of 62
Branches executed:0.00% of 46
Taken at least once:0.00% of 46
Calls executed:0.00% of 5

Function 'kingdomCards'
Lines executed:0.00% of 13
No branches
No calls

Function 'newGame'
Lines executed:0.00% of 3
No branches
No calls

Function 'compare'
Lines executed:0.00% of 6
Branches executed:0.00% of 4
Taken at least once:0.00% of 4
No calls

File 'dominion.c'
Lines executed:0.70% of 570
Branches executed:0.47% of 422
Taken at least once:0.24% of 422
Calls executed:0.00% of 99
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
function compare called 0 returned 0% blocks executed 0%
    #####:    8:int compare(const void* a, const void* b) {
    #####:    9:  if (*(int*)a > *(int*)b)
branch  0 never executed
branch  1 never executed
    #####:   10:    return 1;
    #####:   11:  if (*(int*)a < *(int*)b)
branch  0 never executed
branch  1 never executed
    #####:   12:    return -1;
    #####:   13:  return 0;
        -:   14:}
        -:   15:
function newGame called 0 returned 0% blocks executed 0%
    #####:   16:struct gameState* newGame() {
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
        -:   19:}
        -:   20:
function kingdomCards called 0 returned 0% blocks executed 0%
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
        -:   35:}
        -:   36:
function initializeGame called 0 returned 0% blocks executed 0%
    #####:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;			
        -:   43:  //set up random number generator
    #####:   44:  SelectStream(1);
call    0 never executed
    #####:   45:  PutSeed((long)randomSeed);
call    0 never executed
        -:   46:  
        -:   47:  //check number of players
    #####:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
    #####:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
    #####:   57:  for (i = 0; i < 10; i++)
branch  0 never executed
branch  1 never executed
        -:   58:    {
    #####:   59:      for (j = 0; j < 10; j++)
branch  0 never executed
branch  1 never executed
        -:   60:        {
    #####:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
    #####:   73:  if (numPlayers == 2)
branch  0 never executed
branch  1 never executed
        -:   74:    {
    #####:   75:      state->supplyCount[curse] = 10;
        -:   76:    }
    #####:   77:  else if (numPlayers == 3)
branch  0 never executed
branch  1 never executed
        -:   78:    {
    #####:   79:      state->supplyCount[curse] = 20;
        -:   80:    }
        -:   81:  else
        -:   82:    {
    #####:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
    #####:   87:  if (numPlayers == 2)
branch  0 never executed
branch  1 never executed
        -:   88:    {
    #####:   89:      state->supplyCount[estate] = 8;
    #####:   90:      state->supplyCount[duchy] = 8;
    #####:   91:      state->supplyCount[province] = 8;
        -:   92:    }
        -:   93:  else
        -:   94:    {
    #####:   95:      state->supplyCount[estate] = 12;
    #####:   96:      state->supplyCount[duchy] = 12;
    #####:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
    #####:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
    #####:  102:  state->supplyCount[silver] = 40;
    #####:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
    #####:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
branch  0 never executed
branch  1 never executed
        -:  107:    {
    #####:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
branch  0 never executed
branch  1 never executed
        -:  109:	{
    #####:  110:	  if (kingdomCards[j] == i)
branch  0 never executed
branch  1 never executed
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
    #####:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  114:		{
    #####:  115:		  if (numPlayers == 2){ 
branch  0 never executed
branch  1 never executed
    #####:  116:		    state->supplyCount[i] = 8; 
        -:  117:		  }
    #####:  118:		  else{ state->supplyCount[i] = 12; }
        -:  119:		}
        -:  120:	      else
        -:  121:		{
    #####:  122:		  state->supplyCount[i] = 10;
        -:  123:		}
    #####:  124:	      break;
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
    #####:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
    #####:  138:  for (i = 0; i < numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -:  139:    {
    #####:  140:      state->deckCount[i] = 0;
    #####:  141:      for (j = 0; j < 3; j++)
branch  0 never executed
branch  1 never executed
        -:  142:	{
    #####:  143:	  state->deck[i][j] = estate;
    #####:  144:	  state->deckCount[i]++;
        -:  145:	}
    #####:  146:      for (j = 3; j < 10; j++)
branch  0 never executed
branch  1 never executed
        -:  147:	{
    #####:  148:	  state->deck[i][j] = copper;
    #####:  149:	  state->deckCount[i]++;		
        -:  150:	}
        -:  151:    }
        -:  152:
        -:  153:  //shuffle player decks
    #####:  154:  for (i = 0; i < numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -:  155:    {
    #####:  156:      if ( shuffle(i, state) < 0 )
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  157:	{
    #####:  158:	  return -1;
        -:  159:	}
        -:  160:    }
        -:  161:
        -:  162:  //draw player hands
    #####:  163:  for (i = 0; i < numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -:  164:    {  
        -:  165:      //initialize hand size to zero
    #####:  166:      state->handCount[i] = 0;
    #####:  167:      state->discardCount[i] = 0;
        -:  168:      //draw 5 cards
        -:  169:      // for (j = 0; j < 5; j++)
        -:  170:      //	{
        -:  171:      //	  drawCard(i, state);
        -:  172:      //	}
        -:  173:    }
        -:  174:  
        -:  175:  //set embargo tokens to 0 for all supply piles
    #####:  176:  for (i = 0; i <= treasure_map; i++)
branch  0 never executed
branch  1 never executed
        -:  177:    {
    #####:  178:      state->embargoTokens[i] = 0;
        -:  179:    }
        -:  180:
        -:  181:  //initialize first player's turn
    #####:  182:  state->outpostPlayed = 0;
    #####:  183:  state->phase = 0;
    #####:  184:  state->numActions = 1;
    #####:  185:  state->numBuys = 1;
    #####:  186:  state->playedCardCount = 0;
    #####:  187:  state->whoseTurn = 0;
    #####:  188:  state->handCount[state->whoseTurn] = 0;
        -:  189:  //int it; move to top
        -:  190:
        -:  191:  //Moved draw cards to here, only drawing at the start of a turn
    #####:  192:  for (it = 0; it < 5; it++){
branch  0 never executed
branch  1 never executed
    #####:  193:    drawCard(state->whoseTurn, state);
call    0 never executed
        -:  194:  }
        -:  195:
    #####:  196:  updateCoins(state->whoseTurn, state, 0);
call    0 never executed
        -:  197:
    #####:  198:  return 0;
        -:  199:}
        -:  200:
function shuffle called 0 returned 0% blocks executed 0%
    #####:  201:int shuffle(int player, struct gameState *state) {
        -:  202: 
        -:  203:
        -:  204:  int newDeck[MAX_DECK];
    #####:  205:  int newDeckPos = 0;
        -:  206:  int card;
        -:  207:  int i;
        -:  208:
    #####:  209:  if (state->deckCount[player] < 1)
branch  0 never executed
branch  1 never executed
    #####:  210:    return -1;
    #####:  211:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare); 
call    0 never executed
        -:  212:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  213:
    #####:  214:  while (state->deckCount[player] > 0) {
branch  0 never executed
branch  1 never executed
    #####:  215:    card = floor(Random() * state->deckCount[player]);
call    0 never executed
    #####:  216:    newDeck[newDeckPos] = state->deck[player][card];
    #####:  217:    newDeckPos++;
    #####:  218:    for (i = card; i < state->deckCount[player]-1; i++) {
branch  0 never executed
branch  1 never executed
    #####:  219:      state->deck[player][i] = state->deck[player][i+1];
        -:  220:    }
    #####:  221:    state->deckCount[player]--;
        -:  222:  }
    #####:  223:  for (i = 0; i < newDeckPos; i++) {
branch  0 never executed
branch  1 never executed
    #####:  224:    state->deck[player][i] = newDeck[i];
    #####:  225:    state->deckCount[player]++;
        -:  226:  }
        -:  227:
    #####:  228:  return 0;
        -:  229:}
        -:  230:
function playCard called 2000 returned 100% blocks executed 27%
     2000:  231:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state) 
        -:  232:{	
        -:  233:  int card;
     2000:  234:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  235:
        -:  236:  //check if it is the right phase
     2000:  237:  if (state->phase != 0)
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
        -:  238:    {
     2000:  239:      return -1;
        -:  240:    }
        -:  241:	
        -:  242:  //check if player has enough actions
    #####:  243:  if ( state->numActions < 1 )
branch  0 never executed
branch  1 never executed
        -:  244:    {
    #####:  245:      return -1;
        -:  246:    }
        -:  247:	
        -:  248:  //get card played
    #####:  249:  card = handCard(handPos, state);
call    0 never executed
        -:  250:	
        -:  251:  //check if selected card is an action
    #####:  252:  if ( card < adventurer || card > treasure_map )
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  253:    {
    #####:  254:      return -1;
        -:  255:    }
        -:  256:	
        -:  257:  //play card
    #####:  258:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  259:    {
    #####:  260:      return -1;
        -:  261:    }
        -:  262:	
        -:  263:  //reduce number of actions
    #####:  264:  state->numActions--;
        -:  265:
        -:  266:  //update coins (Treasure cards may be added with card draws)
    #####:  267:  updateCoins(state->whoseTurn, state, coin_bonus);
call    0 never executed
        -:  268:	
    #####:  269:  return 0;
        -:  270:}
        -:  271:
function buyCard called 0 returned 0% blocks executed 0%
    #####:  272:int buyCard(int supplyPos, struct gameState *state) {
        -:  273:  int who;
        -:  274:  if (DEBUG){
        -:  275:    printf("Entering buyCard...\n");
        -:  276:  }
        -:  277:
        -:  278:  // I don't know what to do about the phase thing.
        -:  279:
    #####:  280:  who = state->whoseTurn;
        -:  281:
    #####:  282:  if (state->numBuys < 1){
branch  0 never executed
branch  1 never executed
        -:  283:    if (DEBUG)
        -:  284:      printf("You do not have any buys left\n");
    #####:  285:    return -1;
    #####:  286:  } else if (supplyCount(supplyPos, state) <1){
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  287:    if (DEBUG)
        -:  288:      printf("There are not any of that type of card left\n");
    #####:  289:    return -1;
    #####:  290:  } else if (state->coins < getCost(supplyPos)){
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  291:    if (DEBUG) 
        -:  292:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  293:    return -1;
        -:  294:  } else {
    #####:  295:    state->phase=1;
        -:  296:    //state->supplyCount[supplyPos]--;
    #####:  297:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
call    0 never executed
        -:  298:  
    #####:  299:    state->coins = (state->coins) - (getCost(supplyPos));
call    0 never executed
    #####:  300:    state->numBuys--;
        -:  301:    if (DEBUG)
        -:  302:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  303:  }
        -:  304:
        -:  305:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  306:  //state->discardCount[who]++;
        -:  307:    
    #####:  308:  return 0;
        -:  309:}
        -:  310:
function numHandCards called 0 returned 0% blocks executed 0%
    #####:  311:int numHandCards(struct gameState *state) {
    #####:  312:  return state->handCount[ whoseTurn(state) ];
call    0 never executed
        -:  313:}
        -:  314:
function handCard called 0 returned 0% blocks executed 0%
    #####:  315:int handCard(int handPos, struct gameState *state) {
    #####:  316:  int currentPlayer = whoseTurn(state);
call    0 never executed
    #####:  317:  return state->hand[currentPlayer][handPos];
        -:  318:}
        -:  319:
function supplyCount called 0 returned 0% blocks executed 0%
    #####:  320:int supplyCount(int card, struct gameState *state) {
    #####:  321:  return state->supplyCount[card];
        -:  322:}
        -:  323:
function fullDeckCount called 0 returned 0% blocks executed 0%
    #####:  324:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  325:  int i;
    #####:  326:  int count = 0;
        -:  327:
    #####:  328:  for (i = 0; i < state->deckCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  329:    {
    #####:  330:      if (state->deck[player][i] == card) count++;
branch  0 never executed
branch  1 never executed
        -:  331:    }
        -:  332:
    #####:  333:  for (i = 0; i < state->handCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  334:    {
    #####:  335:      if (state->hand[player][i] == card) count++;
branch  0 never executed
branch  1 never executed
        -:  336:    }
        -:  337:
    #####:  338:  for (i = 0; i < state->discardCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  339:    {
    #####:  340:      if (state->discard[player][i] == card) count++;
branch  0 never executed
branch  1 never executed
        -:  341:    }
        -:  342:
    #####:  343:  return count;
        -:  344:}
        -:  345:
function whoseTurn called 0 returned 0% blocks executed 0%
    #####:  346:int whoseTurn(struct gameState *state) {
    #####:  347:  return state->whoseTurn;
        -:  348:}
        -:  349:
function endTurn called 0 returned 0% blocks executed 0%
    #####:  350:int endTurn(struct gameState *state) {
        -:  351:  int k;
        -:  352:  int i;
    #####:  353:  int currentPlayer = whoseTurn(state);
call    0 never executed
        -:  354:  
        -:  355:  //Discard hand
    #####:  356:  for (i = 0; i < state->handCount[currentPlayer]; i++){
branch  0 never executed
branch  1 never executed
    #####:  357:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  358:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  359:  }
    #####:  360:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  361:    
        -:  362:  //Code for determining the player
    #####:  363:  if (currentPlayer < (state->numPlayers - 1)){ 
branch  0 never executed
branch  1 never executed
    #####:  364:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  365:  }
        -:  366:  else{
    #####:  367:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  368:  }
        -:  369:
    #####:  370:  state->outpostPlayed = 0;
    #####:  371:  state->phase = 0;
    #####:  372:  state->numActions = 1;
    #####:  373:  state->coins = 0;
    #####:  374:  state->numBuys = 1;
    #####:  375:  state->playedCardCount = 0;
    #####:  376:  state->handCount[state->whoseTurn] = 0;
        -:  377:
        -:  378:  //int k; move to top
        -:  379:  //Next player draws hand
    #####:  380:  for (k = 0; k < 5; k++){
branch  0 never executed
branch  1 never executed
    #####:  381:    drawCard(state->whoseTurn, state);//Draw a card
call    0 never executed
        -:  382:  }
        -:  383:
        -:  384:  //Update money
    #####:  385:  updateCoins(state->whoseTurn, state , 0);
call    0 never executed
        -:  386:
    #####:  387:  return 0;
        -:  388:}
        -:  389:
function isGameOver called 0 returned 0% blocks executed 0%
    #####:  390:int isGameOver(struct gameState *state) {
        -:  391:  int i;
        -:  392:  int j;
        -:  393:	
        -:  394:  //if stack of Province cards is empty, the game ends
    #####:  395:  if (state->supplyCount[province] == 0)
branch  0 never executed
branch  1 never executed
        -:  396:    {
    #####:  397:      return 1;
        -:  398:    }
        -:  399:
        -:  400:  //if three supply pile are at 0, the game ends
    #####:  401:  j = 0;
    #####:  402:  for (i = 0; i < 25; i++)
branch  0 never executed
branch  1 never executed
        -:  403:    {
    #####:  404:      if (state->supplyCount[i] == 0)
branch  0 never executed
branch  1 never executed
        -:  405:	{
    #####:  406:	  j++;
        -:  407:	}
        -:  408:    }
    #####:  409:  if ( j >= 3)
branch  0 never executed
branch  1 never executed
        -:  410:    {
    #####:  411:      return 1;
        -:  412:    }
        -:  413:
    #####:  414:  return 0;
        -:  415:}
        -:  416:
function scoreFor called 0 returned 0% blocks executed 0%
    #####:  417:int scoreFor (int player, struct gameState *state) {
        -:  418:
        -:  419:  int i;
    #####:  420:  int score = 0;
        -:  421:  //score from hand
    #####:  422:  for (i = 0; i < state->handCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  423:    {
    #####:  424:      if (state->hand[player][i] == curse) { score = score - 1; };
branch  0 never executed
branch  1 never executed
    #####:  425:      if (state->hand[player][i] == estate) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  426:      if (state->hand[player][i] == duchy) { score = score + 3; };
branch  0 never executed
branch  1 never executed
    #####:  427:      if (state->hand[player][i] == province) { score = score + 6; };
branch  0 never executed
branch  1 never executed
    #####:  428:      if (state->hand[player][i] == great_hall) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  429:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
branch  0 never executed
branch  1 never executed
call    2 never executed
        -:  430:    }
        -:  431:
        -:  432:  //score from discard
    #####:  433:  for (i = 0; i < state->discardCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  434:    {
    #####:  435:      if (state->discard[player][i] == curse) { score = score - 1; };
branch  0 never executed
branch  1 never executed
    #####:  436:      if (state->discard[player][i] == estate) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  437:      if (state->discard[player][i] == duchy) { score = score + 3; };
branch  0 never executed
branch  1 never executed
    #####:  438:      if (state->discard[player][i] == province) { score = score + 6; };
branch  0 never executed
branch  1 never executed
    #####:  439:      if (state->discard[player][i] == great_hall) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  440:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
branch  0 never executed
branch  1 never executed
call    2 never executed
        -:  441:    }
        -:  442:
        -:  443:  //score from deck
    #####:  444:  for (i = 0; i < state->discardCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  445:    {
    #####:  446:      if (state->deck[player][i] == curse) { score = score - 1; };
branch  0 never executed
branch  1 never executed
    #####:  447:      if (state->deck[player][i] == estate) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  448:      if (state->deck[player][i] == duchy) { score = score + 3; };
branch  0 never executed
branch  1 never executed
    #####:  449:      if (state->deck[player][i] == province) { score = score + 6; };
branch  0 never executed
branch  1 never executed
    #####:  450:      if (state->deck[player][i] == great_hall) { score = score + 1; };
branch  0 never executed
branch  1 never executed
    #####:  451:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
branch  0 never executed
branch  1 never executed
call    2 never executed
        -:  452:    }
        -:  453:
    #####:  454:  return score;
        -:  455:}
        -:  456:
function getWinners called 0 returned 0% blocks executed 0%
    #####:  457:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  458:  int i;	
        -:  459:  int j;
        -:  460:  int highScore;
        -:  461:  int currentPlayer;
        -:  462:
        -:  463:  //get score for each player
    #####:  464:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  465:    {
        -:  466:      //set unused player scores to -9999
    #####:  467:      if (i >= state->numPlayers)
branch  0 never executed
branch  1 never executed
        -:  468:	{
    #####:  469:	  players[i] = -9999;
        -:  470:	}
        -:  471:      else
        -:  472:	{
    #####:  473:	  players[i] = scoreFor (i, state);
call    0 never executed
        -:  474:	}
        -:  475:    }
        -:  476:
        -:  477:  //find highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  480:    {
    #####:  481:      if (players[i] > players[j])
branch  0 never executed
branch  1 never executed
        -:  482:	{
    #####:  483:	  j = i;
        -:  484:	}
        -:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //add 1 to players who had less turns
    #####:  489:  currentPlayer = whoseTurn(state);
call    0 never executed
    #####:  490:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  491:    {
    #####:  492:      if ( players[i] == highScore && i > currentPlayer )
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  493:	{
    #####:  494:	  players[i]++;
        -:  495:	}
        -:  496:    }
        -:  497:
        -:  498:  //find new highest score
    #####:  499:  j = 0;
    #####:  500:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  501:    {
    #####:  502:      if ( players[i] > players[j] )
branch  0 never executed
branch  1 never executed
        -:  503:	{
    #####:  504:	  j = i;
        -:  505:	}
        -:  506:    }
    #####:  507:  highScore = players[j];
        -:  508:
        -:  509:  //set winners in array to 1 and rest to 0
    #####:  510:  for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  511:    {
    #####:  512:      if ( players[i] == highScore )
branch  0 never executed
branch  1 never executed
        -:  513:	{
    #####:  514:	  players[i] = 1;
        -:  515:	}
        -:  516:      else
        -:  517:	{
    #####:  518:	  players[i] = 0;
        -:  519:	}
        -:  520:    }
        -:  521:
    #####:  522:  return 0;
        -:  523:}
        -:  524:
function drawCard called 0 returned 0% blocks executed 0%
    #####:  525:int drawCard(int player, struct gameState *state)
        -:  526:{	int count;
        -:  527:  int deckCounter;
    #####:  528:  if (state->deckCount[player] <= 0){//Deck is empty
branch  0 never executed
branch  1 never executed
        -:  529:    
        -:  530:    //Step 1 Shuffle the discard pile back into a deck
        -:  531:    int i;
        -:  532:    //Move discard to deck
    #####:  533:    for (i = 0; i < state->discardCount[player];i++){
branch  0 never executed
branch  1 never executed
    #####:  534:      state->deck[player][i] = state->discard[player][i];
    #####:  535:      state->discard[player][i] = -1;
        -:  536:    }
        -:  537:
    #####:  538:    state->deckCount[player] = state->discardCount[player];
    #####:  539:    state->discardCount[player] = 0;//Reset discard
        -:  540:
        -:  541:    //Shufffle the deck
    #####:  542:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
call    0 never executed
        -:  543:   
        -:  544:    if (DEBUG){//Debug statements
        -:  545:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  546:    }
        -:  547:    
    #####:  548:    state->discardCount[player] = 0;
        -:  549:
        -:  550:    //Step 2 Draw Card
    #####:  551:    count = state->handCount[player];//Get current player's hand count
        -:  552:    
        -:  553:    if (DEBUG){//Debug statements
        -:  554:      printf("Current hand count: %d\n", count);
        -:  555:    }
        -:  556:    
    #####:  557:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  558:
    #####:  559:    if (deckCounter == 0)
branch  0 never executed
branch  1 never executed
    #####:  560:      return -1;
        -:  561:
    #####:  562:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    #####:  563:    state->deckCount[player]--;
    #####:  564:    state->handCount[player]++;//Increment hand count
        -:  565:  }
        -:  566:
        -:  567:  else{
    #####:  568:    int count = state->handCount[player];//Get current hand count for player
        -:  569:    int deckCounter;
        -:  570:    if (DEBUG){//Debug statements
        -:  571:      printf("Current hand count: %d\n", count);
        -:  572:    }
        -:  573:
    #####:  574:    deckCounter = state->deckCount[player];//Create holder for the deck count
    #####:  575:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
    #####:  576:    state->deckCount[player]--;
    #####:  577:    state->handCount[player]++;//Increment hand count
        -:  578:  }
        -:  579:
    #####:  580:  return 0;
        -:  581:}
        -:  582:
function getCost called 0 returned 0% blocks executed 0%
    #####:  583:int getCost(int cardNumber)
        -:  584:{
    #####:  585:  switch( cardNumber ) 
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
branch 10 never executed
branch 11 never executed
branch 12 never executed
branch 13 never executed
branch 14 never executed
branch 15 never executed
branch 16 never executed
branch 17 never executed
branch 18 never executed
branch 19 never executed
branch 20 never executed
branch 21 never executed
branch 22 never executed
branch 23 never executed
branch 24 never executed
branch 25 never executed
branch 26 never executed
branch 27 never executed
        -:  586:    {
        -:  587:    case curse:
    #####:  588:      return 0;
        -:  589:    case estate:
    #####:  590:      return 2;
        -:  591:    case duchy:
    #####:  592:      return 5;
        -:  593:    case province:
    #####:  594:      return 8;
        -:  595:    case copper:
    #####:  596:      return 0;
        -:  597:    case silver:
    #####:  598:      return 3;
        -:  599:    case gold:
    #####:  600:      return 6;
        -:  601:    case adventurer:
    #####:  602:      return 6;
        -:  603:    case council_room:
    #####:  604:      return 5;
        -:  605:    case feast:
    #####:  606:      return 4;
        -:  607:    case gardens:
    #####:  608:      return 4;
        -:  609:    case mine:
    #####:  610:      return 5;
        -:  611:    case remodel:
    #####:  612:      return 4;
        -:  613:    case smithy:
    #####:  614:      return 4;
        -:  615:    case village:
    #####:  616:      return 3;
        -:  617:    case baron:
    #####:  618:      return 4;
        -:  619:    case great_hall:
    #####:  620:      return 3;
        -:  621:    case minion:
    #####:  622:      return 5;
        -:  623:    case steward:
    #####:  624:      return 3;
        -:  625:    case tribute:
    #####:  626:      return 5;
        -:  627:    case ambassador:
    #####:  628:      return 3;
        -:  629:    case cutpurse:
    #####:  630:      return 4;
        -:  631:    case embargo: 
    #####:  632:      return 2;
        -:  633:    case outpost:
    #####:  634:      return 5;
        -:  635:    case salvager:
    #####:  636:      return 4;
        -:  637:    case sea_hag:
    #####:  638:      return 4;
        -:  639:    case treasure_map:
    #####:  640:      return 4;
        -:  641:    }
        -:  642:	
    #####:  643:  return -1;
        -:  644:}
        -:  645:
function Adventurer called 0 returned 0% blocks executed 0%
    #####:  646:int Adventurer(int choice1, int choice2, int choice3, struct gameState *state, int handPos, int currentPlayer, int temphand[MAX_HAND])
        -:  647:{
    #####:  648:	int z = 0;
    #####:  649:	int drawntreasure = 0;
        -:  650:	int cardDrawn;
    #####:  651:	while(drawntreasure<2){
branch  0 never executed
branch  1 never executed
    #####:  652:	if (state->deckCount[currentPlayer] <1){//if the deck is empty we need to shuffle discard and add to deck
branch  0 never executed
branch  1 never executed
    #####:  653:	  shuffle(currentPlayer, state);
call    0 never executed
        -:  654:	}
    #####:  655:	drawCard(currentPlayer, state);
call    0 never executed
    #####:  656:	cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
    #####:  657:	if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
    #####:  658:	  drawntreasure++;
        -:  659:	else{
    #####:  660:	  temphand[z]=cardDrawn;
    #####:  661:	  state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
    #####:  662:	  z++;
        -:  663:	}
        -:  664:      }
    #####:  665:      while(z-1 > -1){
branch  0 never executed
branch  1 never executed
    #####:  666:	state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    #####:  667:	z=z-1;
        -:  668:      }
    #####:  669:      return 0;
        -:  670:}
        -:  671:
function Smithy called 0 returned 0% blocks executed 0%
    #####:  672:int Smithy(int choice1, int choice2, int choice3, struct gameState *state, int handPos, int currentPlayer)
        -:  673:{
    #####:  674:	int i = 0;
        -:  675:	//+3 Cards
    #####:  676:      for (i = 0; i < 2; i++)
branch  0 never executed
branch  1 never executed
        -:  677:	{
    #####:  678:	  drawCard(currentPlayer, state);
call    0 never executed
        -:  679:	}
        -:  680:			
        -:  681:      //discard card from hand
    #####:  682:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####:  683:      return 0;
        -:  684:}
        -:  685:
function Remodel called 0 returned 0% blocks executed 0%
    #####:  686:int Remodel(int choice1, int choice2, int choice3, struct gameState *state, int handPos, int currentPlayer)
        -:  687:{
    #####:  688:	int i = 0, j = 0;
    #####:  689:	j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  690:
    #####:  691:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  692:	{
    #####:  693:	  return 0;
        -:  694:	}
    #####:  695:      gainCard(choice2, state, 0, currentPlayer);
call    0 never executed
        -:  696:      //discard card from hand
    #####:  697:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  698:      //discard trashed card
    #####:  699:      for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -:  700:	{
    #####:  701:	  if (state->hand[currentPlayer][i] == j)
branch  0 never executed
branch  1 never executed
        -:  702:	    {
    #####:  703:	      discardCard(i, currentPlayer, state, 0);			
call    0 never executed
    #####:  704:	      break;
        -:  705:	    }
        -:  706:	}
    #####:  707:      return 0;
        -:  708:}
        -:  709:
function Feast called 0 returned 0% blocks executed 0%
    #####:  710:int Feast(int choice1, int choice2, int choice3, struct gameState *state, int handPos, int currentPlayer)
        -:  711:{
    #####:  712:	int i = 0, x = 0;
        -:  713:	int temphand[MAX_HAND];
        -:  714:	//gain card with cost up to 5
        -:  715:      //Backup hand
    #####:  716:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
branch  0 never executed
branch  1 never executed
    #####:  717:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  718:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  719:      }
        -:  720:      //Backup hand
        -:  721:
        -:  722:      //Update Coins for Buy
    #####:  723:      updateCoins(currentPlayer, state, 5);
call    0 never executed
    #####:  724:      x = 1;//Condition to loop on
    #####:  725:      while( x == 1) {//Buy one card
branch  0 never executed
branch  1 never executed
    #####:  726:      	if (supplyCount(choice1, state) <= 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  727:      	  if (DEBUG)
        -:  728:      	    printf("None of that card left, sorry!\n");
        -:  729:
        -:  730:      	  if (DEBUG){
        -:  731:      	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  732:      	  }
        -:  733:      	}
    #####:  734:      	else if (state->coins < getCost(choice1)){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  735:      	  printf("That card is too expensive!\n");
call    0 never executed
        -:  736:
        -:  737:      	  if (DEBUG){
        -:  738:      	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  739:      	  }
        -:  740:      	}
        -:  741:      	else{
        -:  742:
        -:  743:      	  if (DEBUG){
        -:  744:      	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  745:      	  }
    #####:  746:      	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
call    0 never executed
    #####:  747:          printf("card gained\n");
call    0 never executed
    #####:  748:      	  x = 0;//No more buying cards
        -:  749:
        -:  750:      	  if (DEBUG){
        -:  751:      	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  752:      	  }
        -:  753:
        -:  754:      	}
        -:  755:      }
        -:  756:
        -:  757:      //Reset Hand
    #####:  758:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
branch  0 never executed
branch  1 never executed
    #####:  759:	state->hand[currentPlayer][i] = temphand[i];
    #####:  760:	temphand[i] = -1;
        -:  761:      }
        -:  762:      //Reset Hand
    #####:  763:      return 0;
        -:  764:}
        -:  765:
function Steward called 0 returned 0% blocks executed 0%
    #####:  766:int Steward(int choice1, int choice2, int choice3, struct gameState *state, int handPos, int currentPlayer)
        -:  767:{
    #####:  768:	if (choice1 == 1)
branch  0 never executed
branch  1 never executed
        -:  769:	{
        -:  770:	  //+2 cards
    #####:  771:	  drawCard(currentPlayer, state);
call    0 never executed
    #####:  772:	  drawCard(currentPlayer, state);
call    0 never executed
        -:  773:	}
    #####:  774:      else if (choice1 == 2)
branch  0 never executed
branch  1 never executed
        -:  775:	{
        -:  776:	  //+2 coins
    #####:  777:	  state->coins = state->coins + 3;
        -:  778:	}
        -:  779:      else
        -:  780:	{
        -:  781:	  //trash 2 cards in hand
    #####:  782:	  discardCard(choice2, currentPlayer, state, 1);
call    0 never executed
    #####:  783:	  discardCard(choice3, currentPlayer, state, 1);
call    0 never executed
        -:  784:	}
        -:  785:			
        -:  786:      //discard card from hand
    #####:  787:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####:  788:      return 0;
        -:  789:}
function cardEffect called 0 returned 0% blocks executed 0%
    #####:  790:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  791:{
        -:  792:  int i;
        -:  793:  int j;
        -:  794:  int k;
        -:  795: // int x;
        -:  796:  int index;
    #####:  797:  int currentPlayer = whoseTurn(state);
call    0 never executed
    #####:  798:  int nextPlayer = currentPlayer + 1;
        -:  799:
    #####:  800:  int tributeRevealedCards[2] = {-1, -1};
        -:  801:  int temphand[MAX_HAND];// moved above the if statement
        -:  802: // int drawntreasure=0;
        -:  803: // int cardDrawn;
        -:  804: // int z = 0;// this is the counter for the temp hand
    #####:  805:  if (nextPlayer > (state->numPlayers - 1)){
branch  0 never executed
branch  1 never executed
    #####:  806:    nextPlayer = 0;
        -:  807:  }
        -:  808:  
    #####:  809:	if (card == adventurer)
branch  0 never executed
branch  1 never executed
        -:  810:	{
    #####:  811:    	Adventurer(choice1, choice2, choice3, state, handPos, currentPlayer, temphand);
call    0 never executed
        -:  812:	}
    #####:  813:	else if (card == smithy)
branch  0 never executed
branch  1 never executed
        -:  814:	{
    #####:  815:		Smithy(choice1, choice2, choice3, state, handPos, currentPlayer);
call    0 never executed
        -:  816:	}
    #####:  817:	else if (card == remodel)
branch  0 never executed
branch  1 never executed
        -:  818:	{
    #####:  819:		Remodel(choice1, choice2, choice3, state, handPos, currentPlayer);
call    0 never executed
        -:  820:	}
    #####:  821:	else if (card == feast)
branch  0 never executed
branch  1 never executed
        -:  822:	{
    #####:  823:		Feast(choice1, choice2, choice3, state, handPos, currentPlayer);
call    0 never executed
        -:  824:	}
    #####:  825:	else if (card == steward)
branch  0 never executed
branch  1 never executed
        -:  826:	{
    #####:  827:		Steward(choice1, choice2, choice3, state, handPos, currentPlayer);
call    0 never executed
        -:  828:	}
        -:  829:
        -:  830:  //uses switch to select card and perform actions
    #####:  831:  switch( card ) 
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
branch 10 never executed
branch 11 never executed
branch 12 never executed
branch 13 never executed
branch 14 never executed
branch 15 never executed
        -:  832:    {
        -:  833:    case council_room:
        -:  834:      //+4 Cards
    #####:  835:      for (i = 0; i < 4; i++)
branch  0 never executed
branch  1 never executed
        -:  836:	{
    #####:  837:	  drawCard(currentPlayer, state);
call    0 never executed
        -:  838:	}
        -:  839:			
        -:  840:      //+1 Buy
    #####:  841:      state->numBuys++;
        -:  842:			
        -:  843:      //Each other player draws a card
    #####:  844:      for (i = 0; i < state->numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -:  845:	{
    #####:  846:	  if ( i != currentPlayer )
branch  0 never executed
branch  1 never executed
        -:  847:	    {
    #####:  848:	      drawCard(i, state);
call    0 never executed
        -:  849:	    }
        -:  850:	}
        -:  851:			
        -:  852:      //put played card in played card pile
    #####:  853:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  854:			
    #####:  855:      return 0;
        -:  856:    case gardens:
    #####:  857:      return -1;
        -:  858:			
        -:  859:    case mine:
    #####:  860:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  861:
    #####:  862:      if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  863:	{
    #####:  864:	  return -1;
        -:  865:	}
        -:  866:		
    #####:  867:      if (choice2 > treasure_map || choice2 < curse)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  868:	{
    #####:  869:	  return -1;
        -:  870:	}
        -:  871:
    #####:  872:      if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) )
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
        -:  873:	{
    #####:  874:	  return -1;
        -:  875:	}
        -:  876:
    #####:  877:      gainCard(choice2, state, 2, currentPlayer);
call    0 never executed
        -:  878:
        -:  879:      //discard card from hand
    #####:  880:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  881:
        -:  882:      //discard trashed card
    #####:  883:      for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -:  884:	{
    #####:  885:	  if (state->hand[currentPlayer][i] == j)
branch  0 never executed
branch  1 never executed
        -:  886:	    {
    #####:  887:	      discardCard(i, currentPlayer, state, 0);			
call    0 never executed
    #####:  888:	      break;
        -:  889:	    }
        -:  890:	}
        -:  891:			
    #####:  892:      return 0;
        -:  893:    case village:
        -:  894:      //+1 Card
    #####:  895:      drawCard(currentPlayer, state);
call    0 never executed
        -:  896:			
        -:  897:      //+2 Actions
    #####:  898:      state->numActions = state->numActions + 2;
        -:  899:			
        -:  900:      //discard played card from hand
    #####:  901:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####:  902:      return 0;
        -:  903:    	// smithy();
        -:  904:    	// return 0;
        -:  905:    case baron:
    #####:  906:      state->numBuys++;//Increase buys by 1!
    #####:  907:      if (choice1 > 0){//Boolean true or going to discard an estate
branch  0 never executed
branch  1 never executed
    #####:  908:	int p = 0;//Iterator for hand!
    #####:  909:	int card_not_discarded = 1;//Flag for discard set!
    #####:  910:	while(card_not_discarded){
branch  0 never executed
branch  1 never executed
    #####:  911:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
branch  0 never executed
branch  1 never executed
    #####:  912:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  913:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  914:	    state->discardCount[currentPlayer]++;
    #####:  915:	    for (;p < state->handCount[currentPlayer]; p++){
branch  0 never executed
branch  1 never executed
    #####:  916:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  917:	    }
    #####:  918:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  919:	    state->handCount[currentPlayer]--;
    #####:  920:	    card_not_discarded = 0;//Exit the loop
        -:  921:	  }
    #####:  922:	  else if (p > state->handCount[currentPlayer]){
branch  0 never executed
branch  1 never executed
        -:  923:	    if(DEBUG) {
        -:  924:	      printf("No estate cards in your hand, invalid choice\n");
        -:  925:	      printf("Must gain an estate if there are any\n");
        -:  926:	    }
    #####:  927:	    if (supplyCount(estate, state) > 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  928:	      gainCard(estate, state, 0, currentPlayer);
call    0 never executed
    #####:  929:	      state->supplyCount[estate]--;//Decrement estates
    #####:  930:	      if (supplyCount(estate, state) == 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  931:		isGameOver(state);
call    0 never executed
        -:  932:	      }
        -:  933:	    }
    #####:  934:	    card_not_discarded = 0;//Exit the loop
        -:  935:	  }
        -:  936:			    
        -:  937:	  else{
    #####:  938:	    p++;//Next card
        -:  939:	  }
        -:  940:	}
        -:  941:      }
        -:  942:			    
        -:  943:      else{
    #####:  944:	if (supplyCount(estate, state) > 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  945:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
call    0 never executed
    #####:  946:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  947:	  if (supplyCount(estate, state) == 0){
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  948:	    isGameOver(state);
call    0 never executed
        -:  949:	  }
        -:  950:	}
        -:  951:      }
    #####:  952:      return 0;
        -:  953:		
        -:  954:    case great_hall:
        -:  955:      //+1 Card
    #####:  956:      drawCard(currentPlayer, state);
call    0 never executed
        -:  957:			
        -:  958:      //+1 Actions
    #####:  959:      state->numActions++;
        -:  960:			
        -:  961:      //discard card from hand
    #####:  962:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####:  963:      return 0;
        -:  964:		
        -:  965:    case minion:
        -:  966:      //+1 action
    #####:  967:      state->numActions++;
        -:  968:			
        -:  969:      //discard card from hand
    #####:  970:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  971:			
    #####:  972:      if (choice1)		//+2 coins
branch  0 never executed
branch  1 never executed
        -:  973:	{
    #####:  974:	  state->coins = state->coins + 2;
        -:  975:	}
        -:  976:			
    #####:  977:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
branch  0 never executed
branch  1 never executed
        -:  978:	{
        -:  979:	  //discard hand
    #####:  980:	  while(numHandCards(state) > 0)
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  981:	    {
    #####:  982:	      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
        -:  983:	    }
        -:  984:				
        -:  985:	  //draw 4
    #####:  986:	  for (i = 0; i < 4; i++)
branch  0 never executed
branch  1 never executed
        -:  987:	    {
    #####:  988:	      drawCard(currentPlayer, state);
call    0 never executed
        -:  989:	    }
        -:  990:				
        -:  991:	  //other players discard hand and redraw if hand size > 4
    #####:  992:	  for (i = 0; i < state->numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -:  993:	    {
    #####:  994:	      if (i != currentPlayer)
branch  0 never executed
branch  1 never executed
        -:  995:		{
    #####:  996:		  if ( state->handCount[i] > 4 )
branch  0 never executed
branch  1 never executed
        -:  997:		    {
        -:  998:		      //discard hand
    #####:  999:		      while( state->handCount[i] > 0 )
branch  0 never executed
branch  1 never executed
        -: 1000:			{
    #####: 1001:			  discardCard(handPos, i, state, 0);
call    0 never executed
        -: 1002:			}
        -: 1003:							
        -: 1004:		      //draw 4
    #####: 1005:		      for (j = 0; j < 4; j++)
branch  0 never executed
branch  1 never executed
        -: 1006:			{
    #####: 1007:			  drawCard(i, state);
call    0 never executed
        -: 1008:			}
        -: 1009:		    }
        -: 1010:		}
        -: 1011:	    }
        -: 1012:				
        -: 1013:	}
    #####: 1014:      return 0;
        -: 1015:    case tribute:
    #####: 1016:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
branch  0 never executed
branch  1 never executed
    #####: 1017:	if (state->deckCount[nextPlayer] > 0){
branch  0 never executed
branch  1 never executed
    #####: 1018:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1019:	  state->deckCount[nextPlayer]--;
        -: 1020:	}
    #####: 1021:	else if (state->discardCount[nextPlayer] > 0){
branch  0 never executed
branch  1 never executed
    #####: 1022:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1023:	  state->discardCount[nextPlayer]--;
        -: 1024:	}
        -: 1025:	else{
        -: 1026:	  //No Card to Reveal
        -: 1027:	  if (DEBUG){
        -: 1028:	    printf("No cards to reveal\n");
        -: 1029:	  }
        -: 1030:	}
        -: 1031:      }
        -: 1032:	    
        -: 1033:      else{
    #####: 1034:	if (state->deckCount[nextPlayer] == 0){
branch  0 never executed
branch  1 never executed
    #####: 1035:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
branch  0 never executed
branch  1 never executed
    #####: 1036:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1037:	    state->deckCount[nextPlayer]++;
    #####: 1038:	    state->discard[nextPlayer][i] = -1;
    #####: 1039:	    state->discardCount[nextPlayer]--;
        -: 1040:	  }
        -: 1041:			    
    #####: 1042:	  shuffle(nextPlayer,state);//Shuffle the deck
call    0 never executed
        -: 1043:	} 
    #####: 1044:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1045:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1046:	state->deckCount[nextPlayer]--;
    #####: 1047:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1048:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1049:	state->deckCount[nextPlayer]--;
        -: 1050:      }    
        -: 1051:		       
    #####: 1052:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one 
branch  0 never executed
branch  1 never executed
    #####: 1053:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1054:	state->playedCardCount++;
    #####: 1055:	tributeRevealedCards[1] = -1;
        -: 1056:      }
        -: 1057:
    #####: 1058:      for (i = 0; i <= 2; i ++){
branch  0 never executed
branch  1 never executed
    #####: 1059:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
    #####: 1060:	  state->coins += 2;
        -: 1061:	}
        -: 1062:		    
    #####: 1063:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
    #####: 1064:	  drawCard(currentPlayer, state);
call    0 never executed
    #####: 1065:	  drawCard(currentPlayer, state);
call    0 never executed
        -: 1066:	}
        -: 1067:	else{//Action Card
    #####: 1068:	  state->numActions = state->numActions + 2;
        -: 1069:	}
        -: 1070:      }
        -: 1071:	    
    #####: 1072:      return 0;
        -: 1073:		
        -: 1074:    case ambassador:
    #####: 1075:      j = 0;		//used to check if player has enough cards to discard
        -: 1076:
    #####: 1077:      if (choice2 > 2 || choice2 < 0)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -: 1078:	{
    #####: 1079:	  return -1;				
        -: 1080:	}
        -: 1081:
    #####: 1082:      if (choice1 == handPos)
branch  0 never executed
branch  1 never executed
        -: 1083:	{
    #####: 1084:	  return -1;
        -: 1085:	}
        -: 1086:
    #####: 1087:      for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -: 1088:	{
    #####: 1089:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
        -: 1090:	    {
    #####: 1091:	      j++;
        -: 1092:	    }
        -: 1093:	}
    #####: 1094:      if (j < choice2)
branch  0 never executed
branch  1 never executed
        -: 1095:	{
    #####: 1096:	  return -1;				
        -: 1097:	}
        -: 1098:
        -: 1099:      if (DEBUG) 
        -: 1100:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1101:
        -: 1102:      //increase supply count for choosen card by amount being discarded
    #####: 1103:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1104:			
        -: 1105:      //each other player gains a copy of revealed card
    #####: 1106:      for (i = 0; i < state->numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -: 1107:	{
    #####: 1108:	  if (i != currentPlayer)
branch  0 never executed
branch  1 never executed
        -: 1109:	    {
    #####: 1110:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
call    0 never executed
        -: 1111:	    }
        -: 1112:	}
        -: 1113:
        -: 1114:      //discard played card from hand
    #####: 1115:      discardCard(handPos, currentPlayer, state, 0);			
call    0 never executed
        -: 1116:
        -: 1117:      //trash copies of cards returned to supply
    #####: 1118:      for (j = 0; j < choice2; j++)
branch  0 never executed
branch  1 never executed
        -: 1119:	{
    #####: 1120:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -: 1121:	    {
    #####: 1122:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
branch  0 never executed
branch  1 never executed
        -: 1123:		{
    #####: 1124:		  discardCard(i, currentPlayer, state, 1);
call    0 never executed
    #####: 1125:		  break;
        -: 1126:		}
        -: 1127:	    }
        -: 1128:	}			
        -: 1129:
    #####: 1130:      return 0;
        -: 1131:		
        -: 1132:    case cutpurse:
        -: 1133:
    #####: 1134:      updateCoins(currentPlayer, state, 2);
call    0 never executed
    #####: 1135:      for (i = 0; i < state->numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -: 1136:	{
    #####: 1137:	  if (i != currentPlayer)
branch  0 never executed
branch  1 never executed
        -: 1138:	    {
    #####: 1139:	      for (j = 0; j < state->handCount[i]; j++)
branch  0 never executed
branch  1 never executed
        -: 1140:		{
    #####: 1141:		  if (state->hand[i][j] == copper)
branch  0 never executed
branch  1 never executed
        -: 1142:		    {
    #####: 1143:		      discardCard(j, i, state, 0);
call    0 never executed
    #####: 1144:		      break;
        -: 1145:		    }
    #####: 1146:		  if (j == state->handCount[i])
branch  0 never executed
branch  1 never executed
        -: 1147:		    {
    #####: 1148:		      for (k = 0; k < state->handCount[i]; k++)
branch  0 never executed
branch  1 never executed
        -: 1149:			{
        -: 1150:			  if (DEBUG)
        -: 1151:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1152:			}	
    #####: 1153:		      break;
        -: 1154:		    }		
        -: 1155:		}
        -: 1156:					
        -: 1157:	    }
        -: 1158:				
        -: 1159:	}				
        -: 1160:
        -: 1161:      //discard played card from hand
    #####: 1162:      discardCard(handPos, currentPlayer, state, 0);			
call    0 never executed
        -: 1163:
    #####: 1164:      return 0;
        -: 1165:
        -: 1166:		
        -: 1167:    case embargo: 
        -: 1168:      //+2 Coins
    #####: 1169:      state->coins = state->coins + 2;
        -: 1170:			
        -: 1171:      //see if selected pile is in play
    #####: 1172:      if ( state->supplyCount[choice1] == -1 )
branch  0 never executed
branch  1 never executed
        -: 1173:	{
    #####: 1174:	  return -1;
        -: 1175:	}
        -: 1176:			
        -: 1177:      //add embargo token to selected supply pile
    #####: 1178:      state->embargoTokens[choice1]++;
        -: 1179:			
        -: 1180:      //trash card
    #####: 1181:      discardCard(handPos, currentPlayer, state, 1);		
call    0 never executed
    #####: 1182:      return 0;
        -: 1183:		
        -: 1184:    case outpost:
        -: 1185:      //set outpost flag
    #####: 1186:      state->outpostPlayed++;
        -: 1187:			
        -: 1188:      //discard card
    #####: 1189:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####: 1190:      return 0;
        -: 1191:		
        -: 1192:    case salvager:
        -: 1193:      //+1 buy
    #####: 1194:      state->numBuys++;
        -: 1195:			
    #####: 1196:      if (choice1)
branch  0 never executed
branch  1 never executed
        -: 1197:	{
        -: 1198:	  //gain coins equal to trashed card
    #####: 1199:	  state->coins = state->coins + getCost( handCard(choice1, state) );
call    0 never executed
call    1 never executed
        -: 1200:	  //trash card
    #####: 1201:	  discardCard(choice1, currentPlayer, state, 1);	
call    0 never executed
        -: 1202:	}
        -: 1203:			
        -: 1204:      //discard card
    #####: 1205:      discardCard(handPos, currentPlayer, state, 0);
call    0 never executed
    #####: 1206:      return 0;
        -: 1207:		
        -: 1208:    case sea_hag:
    #####: 1209:      for (i = 0; i < state->numPlayers; i++){
branch  0 never executed
branch  1 never executed
    #####: 1210:	if (i != currentPlayer){
branch  0 never executed
branch  1 never executed
    #####: 1211:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1212:	  state->discardCount[i]++;
    #####: 1213:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1214:	}
        -: 1215:      }
    #####: 1216:      return 0;
        -: 1217:		
        -: 1218:    case treasure_map:
        -: 1219:      //search hand for another treasure_map
    #####: 1220:      index = -1;
    #####: 1221:      for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -: 1222:	{
    #####: 1223:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -: 1224:	    {
    #####: 1225:	      index = i;
    #####: 1226:	      break;
        -: 1227:	    }
        -: 1228:	}
    #####: 1229:      if (index > -1)
branch  0 never executed
branch  1 never executed
        -: 1230:	{
        -: 1231:	  //trash both treasure cards
    #####: 1232:	  discardCard(handPos, currentPlayer, state, 1);
call    0 never executed
    #####: 1233:	  discardCard(index, currentPlayer, state, 1);
call    0 never executed
        -: 1234:
        -: 1235:	  //gain 4 Gold cards
    #####: 1236:	  for (i = 0; i < 4; i++)
branch  0 never executed
branch  1 never executed
        -: 1237:	    {
    #####: 1238:	      gainCard(gold, state, 1, currentPlayer);
call    0 never executed
        -: 1239:	    }
        -: 1240:				
        -: 1241:	  //return success
    #####: 1242:	  return 1;
        -: 1243:	}
        -: 1244:			
        -: 1245:      //no second treasure_map found in hand
    #####: 1246:      return -1;
        -: 1247:    }
        -: 1248:	
    #####: 1249:  return -1;
        -: 1250:}
        -: 1251:
function discardCard called 0 returned 0% blocks executed 0%
    #####: 1252:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1253:{
        -: 1254:	
        -: 1255:  //if card is not trashed, added to Played pile 
    #####: 1256:  if (trashFlag < 1)
branch  0 never executed
branch  1 never executed
        -: 1257:    {
        -: 1258:      //add card to played pile
    #####: 1259:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos]; 
    #####: 1260:      state->playedCardCount++;
        -: 1261:    }
        -: 1262:	
        -: 1263:  //set played card to -1
    #####: 1264:  state->hand[currentPlayer][handPos] = -1;
        -: 1265:	
        -: 1266:  //remove card from player's hand
    #####: 1267:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
branch  0 never executed
branch  1 never executed
        -: 1268:    {
        -: 1269:      //reduce number of cards in hand
    #####: 1270:      state->handCount[currentPlayer]--;
        -: 1271:    }
    #####: 1272:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
branch  0 never executed
branch  1 never executed
        -: 1273:    {
        -: 1274:      //reduce number of cards in hand
    #####: 1275:      state->handCount[currentPlayer]--;
        -: 1276:    }
        -: 1277:  else 	
        -: 1278:    {
        -: 1279:      //replace discarded card with last card in hand
    #####: 1280:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1281:      //set last card to -1
    #####: 1282:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1283:      //reduce number of cards in hand
    #####: 1284:      state->handCount[currentPlayer]--;
        -: 1285:    }
        -: 1286:	
    #####: 1287:  return 0;
        -: 1288:}
        -: 1289:
function gainCard called 0 returned 0% blocks executed 0%
    #####: 1290:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1291:{
        -: 1292:  //Note: supplyPos is enum of choosen card
        -: 1293:	
        -: 1294:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1295:  printf("in gaincard\n");
call    0 never executed
    #####: 1296:  if ( supplyCount(supplyPos, state) < 1 )
call    0 never executed
branch  1 never executed
branch  2 never executed
        -: 1297:    {
    #####: 1298:      return -1;
        -: 1299:    }
    #####: 1300:    printf("supplycount called in gaincard\n");
call    0 never executed
        -: 1301:	
        -: 1302:  //added card for [whoseTurn] current player:
        -: 1303:  // toFlag = 0 : add to discard
        -: 1304:  // toFlag = 1 : add to deck
        -: 1305:  // toFlag = 2 : add to hand
        -: 1306:
    #####: 1307:  if (toFlag == 1)
branch  0 never executed
branch  1 never executed
        -: 1308:    {
    #####: 1309:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1310:      state->deckCount[player]++;
        -: 1311:    }
    #####: 1312:  else if (toFlag == 2)
branch  0 never executed
branch  1 never executed
        -: 1313:    {
    #####: 1314:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1315:      state->handCount[player]++;
        -: 1316:    }
        -: 1317:  else
        -: 1318:    {
    #####: 1319:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1320:      state->discardCount[player]++;
        -: 1321:    }
    #####: 1322:    printf("if else passed in gaincard\n");
call    0 never executed
        -: 1323:	
        -: 1324:  //decrease number in supply pile
    #####: 1325:  state->supplyCount[supplyPos]--;
        -: 1326:	 
    #####: 1327:  return 0;
        -: 1328:}
        -: 1329:
function updateCoins called 0 returned 0% blocks executed 0%
    #####: 1330:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1331:{
        -: 1332:  int i;
        -: 1333:	
        -: 1334:  //reset coin count
    #####: 1335:  state->coins = 0;
        -: 1336:
        -: 1337:  //add coins for each Treasure card in player's hand
    #####: 1338:  for (i = 0; i < state->handCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -: 1339:    {
    #####: 1340:      if (state->hand[player][i] == copper)
branch  0 never executed
branch  1 never executed
        -: 1341:	{
    #####: 1342:	  state->coins += 1;
        -: 1343:	}
    #####: 1344:      else if (state->hand[player][i] == silver)
branch  0 never executed
branch  1 never executed
        -: 1345:	{
    #####: 1346:	  state->coins += 2;
        -: 1347:	}
    #####: 1348:      else if (state->hand[player][i] == gold)
branch  0 never executed
branch  1 never executed
        -: 1349:	{
    #####: 1350:	  state->coins += 3;
        -: 1351:	}	
        -: 1352:    }	
        -: 1353:
        -: 1354:  //add bonus
    #####: 1355:  state->coins += bonus;
        -: 1356:
    #####: 1357:  return 0;
        -: 1358:}
        -: 1359:
        -: 1360:
        -: 1361://end of dominion.c
        -: 1362:
randomtestcard2
